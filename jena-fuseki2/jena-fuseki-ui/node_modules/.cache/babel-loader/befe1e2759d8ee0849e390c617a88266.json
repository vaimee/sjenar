{"ast":null,"code":"function cov_1ild61nsx8() {\n  var path = \"C:\\\\progs\\\\vaimee\\\\sjenar\\\\jena-fuseki2\\\\jena-fuseki-ui\\\\src\\\\views\\\\dataset\\\\Edit.vue\";\n  var hash = \"d7eaeaa44eeeb2f9cbb18eb63ee932a0f88439d0\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"C:\\\\progs\\\\vaimee\\\\sjenar\\\\jena-fuseki2\\\\jena-fuseki-ui\\\\src\\\\views\\\\dataset\\\\Edit.vue\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 128,\n          column: 0\n        },\n        end: {\n          line: 128,\n          column: 29\n        }\n      },\n      \"1\": {\n        start: {\n          line: 130,\n          column: 26\n        },\n        end: {\n          line: 130,\n          column: 31\n        }\n      },\n      \"2\": {\n        start: {\n          line: 146,\n          column: 4\n        },\n        end: {\n          line: 173,\n          column: 5\n        }\n      },\n      \"3\": {\n        start: {\n          line: 178,\n          column: 6\n        },\n        end: {\n          line: 180,\n          column: 7\n        }\n      },\n      \"4\": {\n        start: {\n          line: 179,\n          column: 8\n        },\n        end: {\n          line: 179,\n          column: 17\n        }\n      },\n      \"5\": {\n        start: {\n          line: 181,\n          column: 6\n        },\n        end: {\n          line: 187,\n          column: 10\n        }\n      },\n      \"6\": {\n        start: {\n          line: 183,\n          column: 10\n        },\n        end: {\n          line: 186,\n          column: 11\n        }\n      },\n      \"7\": {\n        start: {\n          line: 193,\n          column: 6\n        },\n        end: {\n          line: 193,\n          column: 30\n        }\n      },\n      \"8\": {\n        start: {\n          line: 198,\n          column: 4\n        },\n        end: {\n          line: 204,\n          column: 6\n        }\n      },\n      \"9\": {\n        start: {\n          line: 199,\n          column: 22\n        },\n        end: {\n          line: 199,\n          column: 48\n        }\n      },\n      \"10\": {\n        start: {\n          line: 200,\n          column: 6\n        },\n        end: {\n          line: 200,\n          column: 82\n        }\n      },\n      \"11\": {\n        start: {\n          line: 201,\n          column: 6\n        },\n        end: {\n          line: 203,\n          column: 8\n        }\n      },\n      \"12\": {\n        start: {\n          line: 202,\n          column: 8\n        },\n        end: {\n          line: 202,\n          column: 36\n        }\n      },\n      \"13\": {\n        start: {\n          line: 208,\n          column: 4\n        },\n        end: {\n          line: 208,\n          column: 10\n        }\n      },\n      \"14\": {\n        start: {\n          line: 213,\n          column: 25\n        },\n        end: {\n          line: 213,\n          column: 62\n        }\n      },\n      \"15\": {\n        start: {\n          line: 214,\n          column: 6\n        },\n        end: {\n          line: 214,\n          column: 44\n        }\n      },\n      \"16\": {\n        start: {\n          line: 215,\n          column: 6\n        },\n        end: {\n          line: 215,\n          column: 27\n        }\n      },\n      \"17\": {\n        start: {\n          line: 216,\n          column: 6\n        },\n        end: {\n          line: 216,\n          column: 69\n        }\n      },\n      \"18\": {\n        start: {\n          line: 219,\n          column: 6\n        },\n        end: {\n          line: 219,\n          column: 31\n        }\n      },\n      \"19\": {\n        start: {\n          line: 220,\n          column: 6\n        },\n        end: {\n          line: 220,\n          column: 30\n        }\n      },\n      \"20\": {\n        start: {\n          line: 221,\n          column: 6\n        },\n        end: {\n          line: 221,\n          column: 20\n        }\n      },\n      \"21\": {\n        start: {\n          line: 222,\n          column: 6\n        },\n        end: {\n          line: 222,\n          column: 29\n        }\n      },\n      \"22\": {\n        start: {\n          line: 223,\n          column: 6\n        },\n        end: {\n          line: 230,\n          column: 7\n        }\n      },\n      \"23\": {\n        start: {\n          line: 224,\n          column: 8\n        },\n        end: {\n          line: 224,\n          column: 125\n        }\n      },\n      \"24\": {\n        start: {\n          line: 226,\n          column: 8\n        },\n        end: {\n          line: 226,\n          column: 33\n        }\n      },\n      \"25\": {\n        start: {\n          line: 228,\n          column: 8\n        },\n        end: {\n          line: 228,\n          column: 34\n        }\n      },\n      \"26\": {\n        start: {\n          line: 229,\n          column: 8\n        },\n        end: {\n          line: 229,\n          column: 33\n        }\n      },\n      \"27\": {\n        start: {\n          line: 233,\n          column: 20\n        },\n        end: {\n          line: 234,\n          column: 50\n        }\n      },\n      \"28\": {\n        start: {\n          line: 234,\n          column: 25\n        },\n        end: {\n          line: 234,\n          column: 49\n        }\n      },\n      \"29\": {\n        start: {\n          line: 235,\n          column: 6\n        },\n        end: {\n          line: 238,\n          column: 7\n        }\n      },\n      \"30\": {\n        start: {\n          line: 236,\n          column: 8\n        },\n        end: {\n          line: 236,\n          column: 73\n        }\n      },\n      \"31\": {\n        start: {\n          line: 237,\n          column: 8\n        },\n        end: {\n          line: 237,\n          column: 14\n        }\n      },\n      \"32\": {\n        start: {\n          line: 239,\n          column: 6\n        },\n        end: {\n          line: 239,\n          column: 30\n        }\n      },\n      \"33\": {\n        start: {\n          line: 240,\n          column: 6\n        },\n        end: {\n          line: 240,\n          column: 36\n        }\n      },\n      \"34\": {\n        start: {\n          line: 241,\n          column: 6\n        },\n        end: {\n          line: 253,\n          column: 7\n        }\n      },\n      \"35\": {\n        start: {\n          line: 242,\n          column: 23\n        },\n        end: {\n          line: 242,\n          column: 88\n        }\n      },\n      \"36\": {\n        start: {\n          line: 243,\n          column: 8\n        },\n        end: {\n          line: 243,\n          column: 31\n        }\n      },\n      \"37\": {\n        start: {\n          line: 245,\n          column: 8\n        },\n        end: {\n          line: 245,\n          column: 28\n        }\n      },\n      \"38\": {\n        start: {\n          line: 246,\n          column: 8\n        },\n        end: {\n          line: 250,\n          column: 10\n        }\n      },\n      \"39\": {\n        start: {\n          line: 252,\n          column: 8\n        },\n        end: {\n          line: 252,\n          column: 33\n        }\n      },\n      \"40\": {\n        start: {\n          line: 256,\n          column: 6\n        },\n        end: {\n          line: 256,\n          column: 29\n        }\n      },\n      \"41\": {\n        start: {\n          line: 257,\n          column: 6\n        },\n        end: {\n          line: 257,\n          column: 20\n        }\n      },\n      \"42\": {\n        start: {\n          line: 260,\n          column: 6\n        },\n        end: {\n          line: 260,\n          column: 30\n        }\n      },\n      \"43\": {\n        start: {\n          line: 261,\n          column: 6\n        },\n        end: {\n          line: 276,\n          column: 7\n        }\n      },\n      \"44\": {\n        start: {\n          line: 262,\n          column: 8\n        },\n        end: {\n          line: 262,\n          column: 95\n        }\n      },\n      \"45\": {\n        start: {\n          line: 263,\n          column: 8\n        },\n        end: {\n          line: 267,\n          column: 10\n        }\n      },\n      \"46\": {\n        start: {\n          line: 269,\n          column: 8\n        },\n        end: {\n          line: 273,\n          column: 10\n        }\n      },\n      \"47\": {\n        start: {\n          line: 275,\n          column: 8\n        },\n        end: {\n          line: 275,\n          column: 33\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 145,\n            column: 2\n          },\n          end: {\n            line: 145,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 145,\n            column: 10\n          },\n          end: {\n            line: 174,\n            column: 3\n          }\n        },\n        line: 145\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 177,\n            column: 4\n          },\n          end: {\n            line: 177,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 177,\n            column: 13\n          },\n          end: {\n            line: 188,\n            column: 5\n          }\n        },\n        line: 177\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 182,\n            column: 13\n          },\n          end: {\n            line: 182,\n            column: 14\n          }\n        },\n        loc: {\n          start: {\n            line: 182,\n            column: 22\n          },\n          end: {\n            line: 187,\n            column: 9\n          }\n        },\n        line: 182\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 192,\n            column: 4\n          },\n          end: {\n            line: 192,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 192,\n            column: 18\n          },\n          end: {\n            line: 194,\n            column: 5\n          }\n        },\n        line: 192\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 197,\n            column: 2\n          },\n          end: {\n            line: 197,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 197,\n            column: 13\n          },\n          end: {\n            line: 205,\n            column: 3\n          }\n        },\n        line: 197\n      },\n      \"5\": {\n        name: \"(anonymous_5)\",\n        decl: {\n          start: {\n            line: 198,\n            column: 19\n          },\n          end: {\n            line: 198,\n            column: 20\n          }\n        },\n        loc: {\n          start: {\n            line: 198,\n            column: 25\n          },\n          end: {\n            line: 204,\n            column: 5\n          }\n        },\n        line: 198\n      },\n      \"6\": {\n        name: \"(anonymous_6)\",\n        decl: {\n          start: {\n            line: 201,\n            column: 41\n          },\n          end: {\n            line: 201,\n            column: 42\n          }\n        },\n        loc: {\n          start: {\n            line: 201,\n            column: 47\n          },\n          end: {\n            line: 203,\n            column: 7\n          }\n        },\n        line: 201\n      },\n      \"7\": {\n        name: \"(anonymous_7)\",\n        decl: {\n          start: {\n            line: 207,\n            column: 2\n          },\n          end: {\n            line: 207,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 207,\n            column: 36\n          },\n          end: {\n            line: 209,\n            column: 3\n          }\n        },\n        line: 207\n      },\n      \"8\": {\n        name: \"(anonymous_8)\",\n        decl: {\n          start: {\n            line: 212,\n            column: 4\n          },\n          end: {\n            line: 212,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 212,\n            column: 25\n          },\n          end: {\n            line: 217,\n            column: 5\n          }\n        },\n        line: 212\n      },\n      \"9\": {\n        name: \"(anonymous_9)\",\n        decl: {\n          start: {\n            line: 218,\n            column: 23\n          },\n          end: {\n            line: 218,\n            column: 24\n          }\n        },\n        loc: {\n          start: {\n            line: 218,\n            column: 41\n          },\n          end: {\n            line: 231,\n            column: 5\n          }\n        },\n        line: 218\n      },\n      \"10\": {\n        name: \"(anonymous_10)\",\n        decl: {\n          start: {\n            line: 232,\n            column: 16\n          },\n          end: {\n            line: 232,\n            column: 17\n          }\n        },\n        loc: {\n          start: {\n            line: 232,\n            column: 43\n          },\n          end: {\n            line: 254,\n            column: 5\n          }\n        },\n        line: 232\n      },\n      \"11\": {\n        name: \"(anonymous_11)\",\n        decl: {\n          start: {\n            line: 234,\n            column: 14\n          },\n          end: {\n            line: 234,\n            column: 15\n          }\n        },\n        loc: {\n          start: {\n            line: 234,\n            column: 25\n          },\n          end: {\n            line: 234,\n            column: 49\n          }\n        },\n        line: 234\n      },\n      \"12\": {\n        name: \"(anonymous_12)\",\n        decl: {\n          start: {\n            line: 255,\n            column: 20\n          },\n          end: {\n            line: 255,\n            column: 21\n          }\n        },\n        loc: {\n          start: {\n            line: 255,\n            column: 32\n          },\n          end: {\n            line: 258,\n            column: 5\n          }\n        },\n        line: 255\n      },\n      \"13\": {\n        name: \"(anonymous_13)\",\n        decl: {\n          start: {\n            line: 259,\n            column: 15\n          },\n          end: {\n            line: 259,\n            column: 16\n          }\n        },\n        loc: {\n          start: {\n            line: 259,\n            column: 33\n          },\n          end: {\n            line: 277,\n            column: 5\n          }\n        },\n        line: 259\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 178,\n            column: 6\n          },\n          end: {\n            line: 180,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 178,\n            column: 6\n          },\n          end: {\n            line: 180,\n            column: 7\n          }\n        }, {\n          start: {\n            line: undefined,\n            column: undefined\n          },\n          end: {\n            line: undefined,\n            column: undefined\n          }\n        }],\n        line: 178\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 235,\n            column: 6\n          },\n          end: {\n            line: 238,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 235,\n            column: 6\n          },\n          end: {\n            line: 238,\n            column: 7\n          }\n        }, {\n          start: {\n            line: undefined,\n            column: undefined\n          },\n          end: {\n            line: undefined,\n            column: undefined\n          }\n        }],\n        line: 235\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0,\n      \"30\": 0,\n      \"31\": 0,\n      \"32\": 0,\n      \"33\": 0,\n      \"34\": 0,\n      \"35\": 0,\n      \"36\": 0,\n      \"37\": 0,\n      \"38\": 0,\n      \"39\": 0,\n      \"40\": 0,\n      \"41\": 0,\n      \"42\": 0,\n      \"43\": 0,\n      \"44\": 0,\n      \"45\": 0,\n      \"46\": 0,\n      \"47\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0]\n    },\n    inputSourceMap: {\n      version: 3,\n      sources: [\"Edit.vue\"],\n      names: [],\n      mappings: \";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkn      file: \"Edit.vue\",\n      sourceRoot: \"src/views/dataset\",\n      sourcesContent: [\"<!--\\n   Licensed to the Apache Software Foundation (ASF) under one or more\\n   contributor license agreements.  See the NOTICE file distributed with\\n   this work for additional information regarding copyright ownership.\\n   The ASF licenses this file to You under the Apache License, Version 2.0\\n   (the \\\"License\\\"); you may not use this file except in compliance with\\n   the License.  You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n-->\\n\\n<template>\\n  <b-container fluid>\\n    <b-row class=\\\"mt-4\\\">\\n      <b-col cols=\\\"12\\\">\\n        <h2>/{{ this.datasetName }}</h2>\\n        <b-card no-body>\\n          <b-card-header header-tag=\\\"nav\\\">\\n            <Menu :dataset-name=\\\"datasetName\\\" />\\n          </b-card-header>\\n          <b-card-body v-if=\\\"!this.services['gsp-rw'] || this.services['gsp-rw'].length === 0\\\">\\n            <b-alert show variant=\\\"warning\\\">No service for adding data available. The Graph Store Protocol service should be configured to allow adding data.</b-alert>\\n          </b-card-body>\\n          <b-card-body v-else>\\n            <b-card-title>Available Graphs</b-card-title>\\n            <div>\\n              <b-row class=\\\"mb-2\\\">\\n                <b-col sm=\\\"12\\\" md=\\\"4\\\">\\n                  <div class=\\\"mb-2\\\">\\n                    <b-button\\n                      @click=\\\"listCurrentGraphs()\\\"\\n                      :disabled=\\\"!!loadingGraphs\\\"\\n                      variant=\\\"primary\\\"\\n                    >list current graphs</b-button>\\n                  </div>\\n                  <b-list-group>\\n                    <b-list-group-item\\n                      v-if=\\\"!loadingGraphs\\\"\\n                    >\\n                      <span v-if=\\\"this.graphs.length === 0\\\">Click to list current graphs</span>\\n                      <table-listing\\n                        :fields=\\\"fields\\\"\\n                        :items=\\\"items\\\"\\n                        :is-busy=\\\"loadingGraphs\\\"\\n                        :filterable=\\\"false\\\"\\n                        v-else\\n                      >\\n                        <template v-slot:cell(name)=\\\"data\\\">\\n                          <a href=\\\"#\\\" @click.prevent=\\\"fetchGraph(data.item.name)\\\">\\n                            {{ data.item.name }}\\n                          </a>\\n                        </template>\\n                      </table-listing>\\n                    </b-list-group-item>\\n                    <b-list-group-item\\n                      v-else\\n                    >\\n                      <b-skeleton animation=\\\"wave\\\" width=\\\"85%\\\"></b-skeleton>\\n                      <b-skeleton animation=\\\"wave\\\" width=\\\"55%\\\"></b-skeleton>\\n                      <b-skeleton animation=\\\"wave\\\" width=\\\"70%\\\"></b-skeleton>\\n                    </b-list-group-item>\\n                  </b-list-group>\\n                </b-col>\\n                <b-col>\\n                  <b-overlay :show=\\\"loadingGraph\\\">\\n                    <b-input-group prepend=\\\"graph\\\" class=\\\"mb-2\\\">\\n                      <b-form-input\\n                        :placeholder=\\\"selectedGraph !== '' ? selectedGraph : 'choose a graph from the list'\\\"\\n                        disabled\\n                      ></b-form-input>\\n                    </b-input-group>\\n                    <b-textarea\\n                      ref=\\\"graph-editor\\\"\\n                      v-model=\\\"content\\\"\\n                    >\\n                    </b-textarea>\\n                    <div class=\\\"mt-2 text-right\\\">\\n                      <b-button\\n                        class=\\\"mr-2\\\"\\n                        variant=\\\"secondary\\\"\\n                        @click=\\\"discardChanges()\\\"\\n                      >\\n                        <FontAwesomeIcon icon=\\\"times\\\" />\\n                        <span class=\\\"ml-1\\\">discard changes</span>\\n                      </b-button>\\n                      <b-button\\n                        :disabled=\\\"selectedGraph === '' || loadingGraph || loadingGraphs\\\"\\n                        variant=\\\"info\\\"\\n                        @click=\\\"saveGraph()\\\"\\n                      >\\n                        <FontAwesomeIcon icon=\\\"check\\\" />\\n                        <span\\n                          class=\\\"ml-1\\\"\\n                        >save</span>\\n                      </b-button>\\n                    </div>\\n                  </b-overlay>\\n                </b-col>\\n              </b-row>\\n            </div>\\n          </b-card-body>\\n        </b-card>\\n      </b-col>\\n    </b-row>\\n  </b-container>\\n</template>\\n\\n<script>\\nimport Menu from '@/components/dataset/Menu'\\nimport TableListing from '@/components/dataset/TableListing'\\nimport CodeMirror from 'codemirror'\\nimport 'codemirror/mode/turtle/turtle'\\nimport {\\n  faTimes,\\n  faCheck\\n} from '@fortawesome/free-solid-svg-icons'\\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\\nimport { library } from '@fortawesome/fontawesome-svg-core'\\nimport currentDatasetMixin from '@/mixins/current-dataset'\\nimport { displayError } from '@/utils'\\n\\nlibrary.add(faTimes, faCheck)\\n\\nconst MAX_EDITABLE_SIZE = 10000\\n\\nexport default {\\n  name: 'DatasetEdit',\\n\\n  components: {\\n    Menu,\\n    TableListing,\\n    FontAwesomeIcon\\n  },\\n\\n  mixins: [\\n    currentDatasetMixin\\n  ],\\n\\n  data () {\\n    return {\\n      loadingGraphs: false,\\n      loadingGraph: false,\\n      graphs: [],\\n      fields: [\\n        {\\n          key: 'name',\\n          label: 'name',\\n          sortable: true,\\n          sortDirection: 'asc'\\n        },\\n        {\\n          key: 'count',\\n          label: 'count',\\n          sortable: true,\\n          sortDirection: 'asc'\\n        }\\n      ],\\n      selectedGraph: '',\\n      content: '',\\n      code: '',\\n      codemirrorEditor: null,\\n      cmOptions: {\\n        mode: 'text/turtle',\\n        lineNumbers: true\\n        // readOnly: 'nocursor'\\n      }\\n    }\\n  },\\n\\n  computed: {\\n    items () {\\n      if (!this.graphs) {\\n        return []\\n      }\\n      return Object.entries(this.graphs)\\n        .map(graph => {\\n          return {\\n            name: graph[0],\\n            count: graph[1]\\n          }\\n        })\\n    }\\n  },\\n\\n  watch: {\\n    code (newVal) {\\n      this.codeChanged(newVal)\\n    }\\n  },\\n\\n  created () {\\n    this.$nextTick(() => {\\n      const element = this.$refs['graph-editor']\\n      this.codemirrorEditor = CodeMirror.fromTextArea(element.$el, this.cmOptions)\\n      this.codemirrorEditor.on('change', cm => {\\n        this.content = cm.getValue()\\n      })\\n    })\\n  },\\n\\n  beforeRouteLeave (to, from, next) {\\n    next()\\n  },\\n\\n  methods: {\\n    codeChanged (newVal) {\\n      const scrollInfo = this.codemirrorEditor.getScrollInfo()\\n      this.codemirrorEditor.setValue(newVal)\\n      this.content = newVal\\n      this.codemirrorEditor.scrollTo(scrollInfo.left, scrollInfo.top)\\n    },\\n    listCurrentGraphs: async function () {\\n      this.loadingGraphs = true\\n      this.loadingGraph = true\\n      this.code = ''\\n      this.selectedGraph = ''\\n      try {\\n        this.graphs = await this.$fusekiService.countGraphsTriples(this.datasetName, this.services.query['srv.endpoints'][0])\\n      } catch (error) {\\n        displayError(this, error)\\n      } finally {\\n        this.loadingGraphs = false\\n        this.loadingGraph = false\\n      }\\n    },\\n    fetchGraph: async function (graphName) {\\n      const graph = Object.entries(this.graphs)\\n        .find(element => element[0] === graphName)\\n      if (parseInt(graph[1]) > MAX_EDITABLE_SIZE) {\\n        alert('Sorry, that dataset is too large to load into the editor')\\n        return\\n      }\\n      this.loadingGraph = true\\n      this.selectedGraph = graphName\\n      try {\\n        const result = await this.$fusekiService.fetchGraph(this.datasetName, graphName)\\n        this.code = result.data\\n      } catch (error) {\\n        console.error(error)\\n        this.$bvToast.toast(`${error}`, {\\n          title: 'Error',\\n          noAutoHide: true,\\n          appendToast: false\\n        })\\n      } finally {\\n        this.loadingGraph = false\\n      }\\n    },\\n    discardChanges: function () {\\n      this.selectedGraph = ''\\n      this.code = ''\\n    },\\n    saveGraph: async function () {\\n      this.loadingGraph = true\\n      try {\\n        await this.$fusekiService.saveGraph(this.datasetName, this.selectedGraph, this.content)\\n        this.$bvToast.toast(`Graph updated for dataset \\\"${this.datasetName}\\\"`, {\\n          title: 'Notification',\\n          autoHideDelay: 5000,\\n          appendToast: false\\n        })\\n      } catch (error) {\\n        this.$bvToast.toast(`${error}`, {\\n          title: 'Error',\\n          noAutoHide: true,\\n          appendToast: false\\n        })\\n      } finally {\\n        this.loadingGraph = false\\n      }\\n    }\\n  }\\n}\\n</script>\\n\\n<style lang=\\\"scss\\\">\\n@import '~codemirror';\\n</style>\\n\"]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"d7eaeaa44eeeb2f9cbb18eb63ee932a0f88439d0\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_1ild61nsx8 = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_1ild61nsx8();\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Menu from '@/components/dataset/Menu';\nimport TableListing from '@/components/dataset/TableListing';\nimport CodeMirror from 'codemirror';\nimport 'codemirror/mode/turtle/turtle';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport currentDatasetMixin from '@/mixins/current-dataset';\nimport { displayError } from '@/utils';\ncov_1ild61nsx8().s[0]++;\nlibrary.add(faTimes, faCheck);\nconst MAX_EDITABLE_SIZE = (cov_1ild61nsx8().s[1]++, 10000);\nexport default {\n  name: 'DatasetEdit',\n  components: {\n    Menu,\n    TableListing,\n    FontAwesomeIcon\n  },\n  mixins: [currentDatasetMixin],\n\n  data() {\n    cov_1ild61nsx8().f[0]++;\n    cov_1ild61nsx8().s[2]++;\n    return {\n      loadingGraphs: false,\n      loadingGraph: false,\n      graphs: [],\n      fields: [{\n        key: 'name',\n        label: 'name',\n        sortable: true,\n        sortDirection: 'asc'\n      }, {\n        key: 'count',\n        label: 'count',\n        sortable: true,\n        sortDirection: 'asc'\n      }],\n      selectedGraph: '',\n      content: '',\n      code: '',\n      codemirrorEditor: null,\n      cmOptions: {\n        mode: 'text/turtle',\n        lineNumbers: true // readOnly: 'nocursor'\n\n      }\n    };\n  },\n\n  computed: {\n    items() {\n      cov_1ild61nsx8().f[1]++;\n      cov_1ild61nsx8().s[3]++;\n\n      if (!this.graphs) {\n        cov_1ild61nsx8().b[0][0]++;\n        cov_1ild61nsx8().s[4]++;\n        return [];\n      } else {\n        cov_1ild61nsx8().b[0][1]++;\n      }\n\n      cov_1ild61nsx8().s[5]++;\n      return Object.entries(this.graphs).map(graph => {\n        cov_1ild61nsx8().f[2]++;\n        cov_1ild61nsx8().s[6]++;\n        return {\n          name: graph[0],\n          count: graph[1]\n        };\n      });\n    }\n\n  },\n  watch: {\n    code(newVal) {\n      cov_1ild61nsx8().f[3]++;\n      cov_1ild61nsx8().s[7]++;\n      this.codeChanged(newVal);\n    }\n\n  },\n\n  created() {\n    cov_1ild61nsx8().f[4]++;\n    cov_1ild61nsx8().s[8]++;\n    this.$nextTick(() => {\n      cov_1ild61nsx8().f[5]++;\n      const element = (cov_1ild61nsx8().s[9]++, this.$refs['graph-editor']);\n      cov_1ild61nsx8().s[10]++;\n      this.codemirrorEditor = CodeMirror.fromTextArea(element.$el, this.cmOptions);\n      cov_1ild61nsx8().s[11]++;\n      this.codemirrorEditor.on('change', cm => {\n        cov_1ild61nsx8().f[6]++;\n        cov_1ild61nsx8().s[12]++;\n        this.content = cm.getValue();\n      });\n    });\n  },\n\n  beforeRouteLeave(to, from, next) {\n    cov_1ild61nsx8().f[7]++;\n    cov_1ild61nsx8().s[13]++;\n    next();\n  },\n\n  methods: {\n    codeChanged(newVal) {\n      cov_1ild61nsx8().f[8]++;\n      const scrollInfo = (cov_1ild61nsx8().s[14]++, this.codemirrorEditor.getScrollInfo());\n      cov_1ild61nsx8().s[15]++;\n      this.codemirrorEditor.setValue(newVal);\n      cov_1ild61nsx8().s[16]++;\n      this.content = newVal;\n      cov_1ild61nsx8().s[17]++;\n      this.codemirrorEditor.scrollTo(scrollInfo.left, scrollInfo.top);\n    },\n\n    listCurrentGraphs: async function () {\n      cov_1ild61nsx8().f[9]++;\n      cov_1ild61nsx8().s[18]++;\n      this.loadingGraphs = true;\n      cov_1ild61nsx8().s[19]++;\n      this.loadingGraph = true;\n      cov_1ild61nsx8().s[20]++;\n      this.code = '';\n      cov_1ild61nsx8().s[21]++;\n      this.selectedGraph = '';\n      cov_1ild61nsx8().s[22]++;\n\n      try {\n        cov_1ild61nsx8().s[23]++;\n        this.graphs = await this.$fusekiService.countGraphsTriples(this.datasetName, this.services.query['srv.endpoints'][0]);\n      } catch (error) {\n        cov_1ild61nsx8().s[24]++;\n        displayError(this, error);\n      } finally {\n        cov_1ild61nsx8().s[25]++;\n        this.loadingGraphs = false;\n        cov_1ild61nsx8().s[26]++;\n        this.loadingGraph = false;\n      }\n    },\n    fetchGraph: async function (graphName) {\n      cov_1ild61nsx8().f[10]++;\n      const graph = (cov_1ild61nsx8().s[27]++, Object.entries(this.graphs).find(element => {\n        cov_1ild61nsx8().f[11]++;\n        cov_1ild61nsx8().s[28]++;\n        return element[0] === graphName;\n      }));\n      cov_1ild61nsx8().s[29]++;\n\n      if (parseInt(graph[1]) > MAX_EDITABLE_SIZE) {\n        cov_1ild61nsx8().b[1][0]++;\n        cov_1ild61nsx8().s[30]++;\n        alert('Sorry, that dataset is too large to load into the editor');\n        cov_1ild61nsx8().s[31]++;\n        return;\n      } else {\n        cov_1ild61nsx8().b[1][1]++;\n      }\n\n      cov_1ild61nsx8().s[32]++;\n      this.loadingGraph = true;\n      cov_1ild61nsx8().s[33]++;\n      this.selectedGraph = graphName;\n      cov_1ild61nsx8().s[34]++;\n\n      try {\n        const result = (cov_1ild61nsx8().s[35]++, await this.$fusekiService.fetchGraph(this.datasetName, graphName));\n        cov_1ild61nsx8().s[36]++;\n        this.code = result.data;\n      } catch (error) {\n        cov_1ild61nsx8().s[37]++;\n        console.error(error);\n        cov_1ild61nsx8().s[38]++;\n        this.$bvToast.toast(`${error}`, {\n          title: 'Error',\n          noAutoHide: true,\n          appendToast: false\n        });\n      } finally {\n        cov_1ild61nsx8().s[39]++;\n        this.loadingGraph = false;\n      }\n    },\n    discardChanges: function () {\n      cov_1ild61nsx8().f[12]++;\n      cov_1ild61nsx8().s[40]++;\n      this.selectedGraph = '';\n      cov_1ild61nsx8().s[41]++;\n      this.code = '';\n    },\n    saveGraph: async function () {\n      cov_1ild61nsx8().f[13]++;\n      cov_1ild61nsx8().s[42]++;\n      this.loadingGraph = true;\n      cov_1ild61nsx8().s[43]++;\n\n      try {\n        cov_1ild61nsx8().s[44]++;\n        await this.$fusekiService.saveGraph(this.datasetName, this.selectedGraph, this.content);\n        cov_1ild61nsx8().s[45]++;\n        this.$bvToast.toast(`Graph updated for dataset \"${this.datasetName}\"`, {\n          title: 'Notification',\n          autoHideDelay: 5000,\n          appendToast: false\n        });\n      } catch (error) {\n        cov_1ild61nsx8().s[46]++;\n        this.$bvToast.toast(`${error}`, {\n          title: 'Error',\n          noAutoHide: true,\n          appendToast: false\n        });\n      } finally {\n        cov_1ild61nsx8().s[47]++;\n        this.loadingGraph = false;\n      }\n    }\n  }\n};","map":{"version":3,"mappingskHA;AACA;AACA;AACA;AACA,SACAA,OADA,EAEAC,OAFA,QAGA,mCAHA;AAIA;AACA;AACA;AACA;;AAEAC;AAEA;AAEA;AACAC,qBADA;AAGAC;AACAC,QADA;AAEAC,gBAFA;AAGAC;AAHA,GAHA;AASAC,WACAC,mBADA,CATA;;AAaAC;AAAA;AAAA;AACA;AACAC,0BADA;AAEAC,yBAFA;AAGAC,gBAHA;AAIAC,eACA;AACAC,mBADA;AAEAC,qBAFA;AAGAC,sBAHA;AAIAC;AAJA,OADA,EAOA;AACAH,oBADA;AAEAC,sBAFA;AAGAC,sBAHA;AAIAC;AAJA,OAPA,CAJA;AAkBAC,uBAlBA;AAmBAC,iBAnBA;AAoBAC,cApBA;AAqBAC,4BArBA;AAsBAC;AACAC,2BADA;AAEAC,yBAFA,CAGA;;AAHA;AAtBA;AA4BA,GA1CA;;AA4CAC;AACAC;AAAA;AAAA;;AACA;AAAA;AAAA;AACA;AACA,OAFA;AAAA;AAAA;;AADA;AAIA,yCACAC,GADA,CACAC;AAAA;AAAA;AACA;AACA1B,wBADA;AAEA2B;AAFA;AAIA,OANA;AAOA;;AAZA,GA5CA;AA2DAC;AACAV;AAAA;AAAA;AACA;AACA;;AAHA,GA3DA;;AAiEAW;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AAFA;AAGA;AAAA;AAAA;AACA;AACA,OAFA;AAGA,KANA;AAOA,GAzEA;;AA2EAC;AAAA;AAAA;AACAC;AACA,GA7EA;;AA+EAC;AACAC;AAAA;AACA;AADA;AAEA;AAFA;AAGA;AAHA;AAIA;AACA,KANA;;AAOAC;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAGA;AAHA;AAIA;AAJA;;AAKA;AAAA;AACA;AACA,OAFA,CAEA;AAAA;AACAC;AACA,OAJA,SAIA;AAAA;AACA;AADA;AAEA;AACA;AACA,KApBA;AAqBAC;AAAA;AACA,2EACAC,IADA,CACAC;AAAA;AAAA;AAAA;AAAA,OADA;AADA;;AAGA;AAAA;AAAA;AACAC;AADA;AAEA;AACA,OAHA;AAAA;AAAA;;AAHA;AAOA;AAPA;AAQA;AARA;;AASA;AACA;AADA;AAEA;AACA,OAHA,CAGA;AAAA;AACAC;AADA;AAEA;AACAC,wBADA;AAEAC,0BAFA;AAGAC;AAHA;AAKA,OAVA,SAUA;AAAA;AACA;AACA;AACA,KA3CA;AA4CAC;AAAA;AAAA;AACA;AADA;AAEA;AACA,KA/CA;AAgDAC;AAAA;AAAA;AACA;AADA;;AAEA;AAAA;AACA;AADA;AAEA;AACAJ,+BADA;AAEAK,6BAFA;AAGAH;AAHA;AAKA,OAPA,CAOA;AAAA;AACA;AACAF,wBADA;AAEAC,0BAFA;AAGAC;AAHA;AAKA,OAbA,SAaA;AAAA;AACA;AACA;AACA;AAlEA;AA/EA","names":["faTimes","faCheck","library","name","components","Menu","TableListing","FontAwesomeIcon","mixins","currentDatasetMixin","data","loadingGraphs","loadingGraph","graphs","fields","key","label","sortable","sortDirection","selectedGraph","content","code","codemirrorEditor","cmOptions","mode","lineNumbers","computed","items","map","graph","count","watch","created","beforeRouteLeave","next","methods","codeChanged","listCurrentGraphs","displayError","fetchGraph","find","element","alert","console","title","noAutoHide","appendToast","discardChanges","saveGraph","autoHideDelay"],"sourceRoot":"src/views/dataset","sources":["Edit.vue"],"sourcesContent":["<!--\n   Licensed to the Apache Software Foundation (ASF) under one or more\n   contributor license agreements.  See the NOTICE file distributed with\n   this work for additional information regarding copyright ownership.\n   The ASF licenses this file to You under the Apache License, Version 2.0\n   (the \"License\"); you may not use this file except in compliance with\n   the License.  You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n-->\n\n<template>\n  <b-container fluid>\n    <b-row class=\"mt-4\">\n      <b-col cols=\"12\">\n        <h2>/{{ this.datasetName }}</h2>\n        <b-card no-body>\n          <b-card-header header-tag=\"nav\">\n            <Menu :dataset-name=\"datasetName\" />\n          </b-card-header>\n          <b-card-body v-if=\"!this.services['gsp-rw'] || this.services['gsp-rw'].length === 0\">\n            <b-alert show variant=\"warning\">No service for adding data available. The Graph Store Protocol service should be configured to allow adding data.</b-alert>\n          </b-card-body>\n          <b-card-body v-else>\n            <b-card-title>Available Graphs</b-card-title>\n            <div>\n              <b-row class=\"mb-2\">\n                <b-col sm=\"12\" md=\"4\">\n                  <div class=\"mb-2\">\n                    <b-button\n                      @click=\"listCurrentGraphs()\"\n                      :disabled=\"!!loadingGraphs\"\n                      variant=\"primary\"\n                    >list current graphs</b-button>\n                  </div>\n                  <b-list-group>\n                    <b-list-group-item\n                      v-if=\"!loadingGraphs\"\n                    >\n                      <span v-if=\"this.graphs.length === 0\">Click to list current graphs</span>\n                      <table-listing\n                        :fields=\"fields\"\n                        :items=\"items\"\n                        :is-busy=\"loadingGraphs\"\n                        :filterable=\"false\"\n                        v-else\n                      >\n                        <template v-slot:cell(name)=\"data\">\n                          <a href=\"#\" @click.prevent=\"fetchGraph(data.item.name)\">\n                            {{ data.item.name }}\n                          </a>\n                        </template>\n                      </table-listing>\n                    </b-list-group-item>\n                    <b-list-group-item\n                      v-else\n                    >\n                      <b-skeleton animation=\"wave\" width=\"85%\"></b-skeleton>\n                      <b-skeleton animation=\"wave\" width=\"55%\"></b-skeleton>\n                      <b-skeleton animation=\"wave\" width=\"70%\"></b-skeleton>\n                    </b-list-group-item>\n                  </b-list-group>\n                </b-col>\n                <b-col>\n                  <b-overlay :show=\"loadingGraph\">\n                    <b-input-group prepend=\"graph\" class=\"mb-2\">\n                      <b-form-input\n                        :placeholder=\"selectedGraph !== '' ? selectedGraph : 'choose a graph from the list'\"\n                        disabled\n                      ></b-form-input>\n                    </b-input-group>\n                    <b-textarea\n                      ref=\"graph-editor\"\n                      v-model=\"content\"\n                    >\n                    </b-textarea>\n                    <div class=\"mt-2 text-right\">\n                      <b-button\n                        class=\"mr-2\"\n                        variant=\"secondary\"\n                        @click=\"discardChanges()\"\n                      >\n                        <FontAwesomeIcon icon=\"times\" />\n                        <span class=\"ml-1\">discard changes</span>\n                      </b-button>\n                      <b-button\n                        :disabled=\"selectedGraph === '' || loadingGraph || loadingGraphs\"\n                        variant=\"info\"\n                        @click=\"saveGraph()\"\n                      >\n                        <FontAwesomeIcon icon=\"check\" />\n                        <span\n                          class=\"ml-1\"\n                        >save</span>\n                      </b-button>\n                    </div>\n                  </b-overlay>\n                </b-col>\n              </b-row>\n            </div>\n          </b-card-body>\n        </b-card>\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\nimport Menu from '@/components/dataset/Menu'\nimport TableListing from '@/components/dataset/TableListing'\nimport CodeMirror from 'codemirror'\nimport 'codemirror/mode/turtle/turtle'\nimport {\n  faTimes,\n  faCheck\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport currentDatasetMixin from '@/mixins/current-dataset'\nimport { displayError } from '@/utils'\n\nlibrary.add(faTimes, faCheck)\n\nconst MAX_EDITABLE_SIZE = 10000\n\nexport default {\n  name: 'DatasetEdit',\n\n  components: {\n    Menu,\n    TableListing,\n    FontAwesomeIcon\n  },\n\n  mixins: [\n    currentDatasetMixin\n  ],\n\n  data () {\n    return {\n      loadingGraphs: false,\n      loadingGraph: false,\n      graphs: [],\n      fields: [\n        {\n          key: 'name',\n          label: 'name',\n          sortable: true,\n          sortDirection: 'asc'\n        },\n        {\n          key: 'count',\n          label: 'count',\n          sortable: true,\n          sortDirection: 'asc'\n        }\n      ],\n      selectedGraph: '',\n      content: '',\n      code: '',\n      codemirrorEditor: null,\n      cmOptions: {\n        mode: 'text/turtle',\n        lineNumbers: true\n        // readOnly: 'nocursor'\n      }\n    }\n  },\n\n  computed: {\n    items () {\n      if (!this.graphs) {\n        return []\n      }\n      return Object.entries(this.graphs)\n        .map(graph => {\n          return {\n            name: graph[0],\n            count: graph[1]\n          }\n        })\n    }\n  },\n\n  watch: {\n    code (newVal) {\n      this.codeChanged(newVal)\n    }\n  },\n\n  created () {\n    this.$nextTick(() => {\n      const element = this.$refs['graph-editor']\n      this.codemirrorEditor = CodeMirror.fromTextArea(element.$el, this.cmOptions)\n      this.codemirrorEditor.on('change', cm => {\n        this.content = cm.getValue()\n      })\n    })\n  },\n\n  beforeRouteLeave (to, from, next) {\n    next()\n  },\n\n  methods: {\n    codeChanged (newVal) {\n      const scrollInfo = this.codemirrorEditor.getScrollInfo()\n      this.codemirrorEditor.setValue(newVal)\n      this.content = newVal\n      this.codemirrorEditor.scrollTo(scrollInfo.left, scrollInfo.top)\n    },\n    listCurrentGraphs: async function () {\n      this.loadingGraphs = true\n      this.loadingGraph = true\n      this.code = ''\n      this.selectedGraph = ''\n      try {\n        this.graphs = await this.$fusekiService.countGraphsTriples(this.datasetName, this.services.query['srv.endpoints'][0])\n      } catch (error) {\n        displayError(this, error)\n      } finally {\n        this.loadingGraphs = false\n        this.loadingGraph = false\n      }\n    },\n    fetchGraph: async function (graphName) {\n      const graph = Object.entries(this.graphs)\n        .find(element => element[0] === graphName)\n      if (parseInt(graph[1]) > MAX_EDITABLE_SIZE) {\n        alert('Sorry, that dataset is too large to load into the editor')\n        return\n      }\n      this.loadingGraph = true\n      this.selectedGraph = graphName\n      try {\n        const result = await this.$fusekiService.fetchGraph(this.datasetName, graphName)\n        this.code = result.data\n      } catch (error) {\n        console.error(error)\n        this.$bvToast.toast(`${error}`, {\n          title: 'Error',\n          noAutoHide: true,\n          appendToast: false\n        })\n      } finally {\n        this.loadingGraph = false\n      }\n    },\n    discardChanges: function () {\n      this.selectedGraph = ''\n      this.code = ''\n    },\n    saveGraph: async function () {\n      this.loadingGraph = true\n      try {\n        await this.$fusekiService.saveGraph(this.datasetName, this.selectedGraph, this.content)\n        this.$bvToast.toast(`Graph updated for dataset \"${this.datasetName}\"`, {\n          title: 'Notification',\n          autoHideDelay: 5000,\n          appendToast: false\n        })\n      } catch (error) {\n        this.$bvToast.toast(`${error}`, {\n          title: 'Error',\n          noAutoHide: true,\n          appendToast: false\n        })\n      } finally {\n        this.loadingGraph = false\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import '~codemirror';\n</style>\n"]},"metadata":{},"sourceType":"module"}