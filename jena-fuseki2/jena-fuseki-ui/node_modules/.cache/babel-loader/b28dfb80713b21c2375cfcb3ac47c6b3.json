{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/progs/vaimee/sjenar/jena-fuseki2/jena-fuseki-ui/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _qs = _interopRequireDefault(require(\"qs\"));\n\nvar _server = _interopRequireDefault(require(\"@/model/server.status\"));\n\nvar _events = require(\"@/events\");\n\nvar cov_1lxj7po26n = function () {\n  var path = 'C:\\\\progs\\\\vaimee\\\\sjenar\\\\jena-fuseki2\\\\jena-fuseki-ui\\\\src\\\\services\\\\fuseki.service.js',\n      hash = 'b746a07385122623eeb47878478727a4db6178b0',\n      Function = function () {}.constructor,\n      global = new Function('return this')(),\n      gcv = '__coverage__',\n      coverageData = {\n    path: 'C:\\\\progs\\\\vaimee\\\\sjenar\\\\jena-fuseki2\\\\jena-fuseki-ui\\\\src\\\\services\\\\fuseki.service.js',\n    statementMap: {\n      '0': {\n        start: {\n          line: 23,\n          column: 29\n        },\n        end: {\n          line: 23,\n          column: 69\n        }\n      },\n      '1': {\n        start: {\n          line: 24,\n          column: 29\n        },\n        end: {\n          line: 24,\n          column: 95\n        }\n      },\n      '2': {\n        start: {\n          line: 26,\n          column: 36\n        },\n        end: {\n          line: 26,\n          column: 76\n        }\n      },\n      '3': {\n        start: {\n          line: 27,\n          column: 36\n        },\n        end: {\n          line: 27,\n          column: 102\n        }\n      },\n      '4': {\n        start: {\n          line: 34,\n          column: 4\n        },\n        end: {\n          line: 34,\n          column: 25\n        }\n      },\n      '5': {\n        start: {\n          line: 35,\n          column: 4\n        },\n        end: {\n          line: 35,\n          column: 37\n        }\n      },\n      '6': {\n        start: {\n          line: 52,\n          column: 24\n        },\n        end: {\n          line: 52,\n          column: 27\n        }\n      },\n      '7': {\n        start: {\n          line: 53,\n          column: 4\n        },\n        end: {\n          line: 55,\n          column: 5\n        }\n      },\n      '8': {\n        start: {\n          line: 54,\n          column: 6\n        },\n        end: {\n          line: 54,\n          column: 44\n        }\n      },\n      '9': {\n        start: {\n          line: 56,\n          column: 21\n        },\n        end: {\n          line: 56,\n          column: 86\n        }\n      },\n      '10': {\n        start: {\n          line: 57,\n          column: 4\n        },\n        end: {\n          line: 57,\n          column: 40\n        }\n      },\n      '11': {\n        start: {\n          line: 61,\n          column: 21\n        },\n        end: {\n          line: 61,\n          column: 68\n        }\n      },\n      '12': {\n        start: {\n          line: 62,\n          column: 4\n        },\n        end: {\n          line: 62,\n          column: 24\n        }\n      },\n      '13': {\n        start: {\n          line: 66,\n          column: 22\n        },\n        end: {\n          line: 66,\n          column: 42\n        }\n      },\n      '14': {\n        start: {\n          line: 67,\n          column: 4\n        },\n        end: {\n          line: 78,\n          column: 5\n        }\n      },\n      '15': {\n        start: {\n          line: 68,\n          column: 6\n        },\n        end: {\n          line: 68,\n          column: 51\n        }\n      },\n      '16': {\n        start: {\n          line: 70,\n          column: 6\n        },\n        end: {\n          line: 72,\n          column: 7\n        }\n      },\n      '17': {\n        start: {\n          line: 71,\n          column: 8\n        },\n        end: {\n          line: 71,\n          column: 37\n        }\n      },\n      '18': {\n        start: {\n          line: 73,\n          column: 6\n        },\n        end: {\n          line: 73,\n          column: 28\n        }\n      },\n      '19': {\n        start: {\n          line: 74,\n          column: 6\n        },\n        end: {\n          line: 74,\n          column: 94\n        }\n      },\n      '20': {\n        start: {\n          line: 76,\n          column: 6\n        },\n        end: {\n          line: 76,\n          column: 27\n        }\n      },\n      '21': {\n        start: {\n          line: 77,\n          column: 6\n        },\n        end: {\n          line: 77,\n          column: 103\n        }\n      },\n      '22': {\n        start: {\n          line: 82,\n          column: 4\n        },\n        end: {\n          line: 82,\n          column: 43\n        }\n      },\n      '23': {\n        start: {\n          line: 86,\n          column: 21\n        },\n        end: {\n          line: 86,\n          column: 82\n        }\n      },\n      '24': {\n        start: {\n          line: 87,\n          column: 4\n        },\n        end: {\n          line: 87,\n          column: 24\n        }\n      },\n      '25': {\n        start: {\n          line: 91,\n          column: 27\n        },\n        end: {\n          line: 103,\n          column: 6\n        }\n      },\n      '26': {\n        start: {\n          line: 104,\n          column: 20\n        },\n        end: {\n          line: 104,\n          column: 22\n        }\n      },\n      '27': {\n        start: {\n          line: 105,\n          column: 31\n        },\n        end: {\n          line: 105,\n          column: 48\n        }\n      },\n      '28': {\n        start: {\n          line: 106,\n          column: 4\n        },\n        end: {\n          line: 106,\n          column: 86\n        }\n      },\n      '29': {\n        start: {\n          line: 107,\n          column: 27\n        },\n        end: {\n          line: 107,\n          column: 44\n        }\n      },\n      '30': {\n        start: {\n          line: 108,\n          column: 4\n        },\n        end: {\n          line: 110,\n          column: 6\n        }\n      },\n      '31': {\n        start: {\n          line: 109,\n          column: 6\n        },\n        end: {\n          line: 109,\n          column: 52\n        }\n      },\n      '32': {\n        start: {\n          line: 111,\n          column: 4\n        },\n        end: {\n          line: 111,\n          column: 18\n        }\n      },\n      '33': {\n        start: {\n          line: 115,\n          column: 4\n        },\n        end: {\n          line: 115,\n          column: 70\n        }\n      },\n      '34': {\n        start: {\n          line: 128,\n          column: 4\n        },\n        end: {\n          line: 128,\n          column: 73\n        }\n      },\n      '35': {\n        start: {\n          line: 132,\n          column: 17\n        },\n        end: {\n          line: 135,\n          column: 6\n        }\n      },\n      '36': {\n        start: {\n          line: 139,\n          column: 20\n        },\n        end: {\n          line: 141,\n          column: 5\n        }\n      },\n      '37': {\n        start: {\n          line: 142,\n          column: 4\n        },\n        end: {\n          line: 156,\n          column: 5\n        }\n      },\n      '38': {\n        start: {\n          line: 143,\n          column: 6\n        },\n        end: {\n          line: 145,\n          column: 8\n        }\n      },\n      '39': {\n        start: {\n          line: 147,\n          column: 6\n        },\n        end: {\n          line: 154,\n          column: 7\n        }\n      },\n      '40': {\n        start: {\n          line: 148,\n          column: 8\n        },\n        end: {\n          line: 153,\n          column: 9\n        }\n      },\n      '41': {\n        start: {\n          line: 149,\n          column: 10\n        },\n        end: {\n          line: 151,\n          column: 11\n        }\n      },\n      '42': {\n        start: {\n          line: 150,\n          column: 12\n        },\n        end: {\n          line: 150,\n          column: 125\n        }\n      },\n      '43': {\n        start: {\n          line: 152,\n          column: 10\n        },\n        end: {\n          line: 152,\n          column: 183\n        }\n      },\n      '44': {\n        start: {\n          line: 155,\n          column: 6\n        },\n        end: {\n          line: 155,\n          column: 17\n        }\n      },\n      '45': {\n        start: {\n          line: 160,\n          column: 4\n        },\n        end: {\n          line: 160,\n          column: 51\n        }\n      },\n      '46': {\n        start: {\n          line: 164,\n          column: 27\n        },\n        end: {\n          line: 176,\n          column: 6\n        }\n      },\n      '47': {\n        start: {\n          line: 177,\n          column: 20\n        },\n        end: {\n          line: 177,\n          column: 22\n        }\n      },\n      '48': {\n        start: {\n          line: 178,\n          column: 31\n        },\n        end: {\n          line: 178,\n          column: 48\n        }\n      },\n      '49': {\n        start: {\n          line: 179,\n          column: 4\n        },\n        end: {\n          line: 179,\n          column: 77\n        }\n      },\n      '50': {\n        start: {\n          line: 180,\n          column: 27\n        },\n        end: {\n          line: 180,\n          column: 44\n        }\n      },\n      '51': {\n        start: {\n          line: 181,\n          column: 4\n        },\n        end: {\n          line: 183,\n          column: 6\n        }\n      },\n      '52': {\n        start: {\n          line: 182,\n          column: 6\n        },\n        end: {\n          line: 182,\n          column: 52\n        }\n      },\n      '53': {\n        start: {\n          line: 184,\n          column: 4\n        },\n        end: {\n          line: 184,\n          column: 18\n        }\n      },\n      '54': {\n        start: {\n          line: 188,\n          column: 4\n        },\n        end: {\n          line: 196,\n          column: 8\n        }\n      },\n      '55': {\n        start: {\n          line: 200,\n          column: 4\n        },\n        end: {\n          line: 212,\n          column: 8\n        }\n      },\n      '56': {\n        start: {\n          line: 211,\n          column: 8\n        },\n        end: {\n          line: 211,\n          column: 44\n        }\n      }\n    },\n    fnMap: {\n      '0': {\n        name: '(anonymous_0)',\n        decl: {\n          start: {\n            line: 33,\n            column: 2\n          },\n          end: {\n            line: 33,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 33,\n            column: 25\n          },\n          end: {\n            line: 36,\n            column: 3\n          }\n        },\n        line: 33\n      },\n      '1': {\n        name: '(anonymous_1)',\n        decl: {\n          start: {\n            line: 50,\n            column: 2\n          },\n          end: {\n            line: 50,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 50,\n            column: 21\n          },\n          end: {\n            line: 58,\n            column: 3\n          }\n        },\n        line: 50\n      },\n      '2': {\n        name: '(anonymous_2)',\n        decl: {\n          start: {\n            line: 60,\n            column: 2\n          },\n          end: {\n            line: 60,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 60,\n            column: 25\n          },\n          end: {\n            line: 63,\n            column: 3\n          }\n        },\n        line: 60\n      },\n      '3': {\n        name: '(anonymous_3)',\n        decl: {\n          start: {\n            line: 65,\n            column: 2\n          },\n          end: {\n            line: 65,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 65,\n            column: 27\n          },\n          end: {\n            line: 79,\n            column: 3\n          }\n        },\n        line: 65\n      },\n      '4': {\n        name: '(anonymous_4)',\n        decl: {\n          start: {\n            line: 81,\n            column: 2\n          },\n          end: {\n            line: 81,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 81,\n            column: 24\n          },\n          end: {\n            line: 83,\n            column: 3\n          }\n        },\n        line: 81\n      },\n      '5': {\n        name: '(anonymous_5)',\n        decl: {\n          start: {\n            line: 85,\n            column: 2\n          },\n          end: {\n            line: 85,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 85,\n            column: 38\n          },\n          end: {\n            line: 88,\n            column: 3\n          }\n        },\n        line: 85\n      },\n      '6': {\n        name: '(anonymous_6)',\n        decl: {\n          start: {\n            line: 90,\n            column: 2\n          },\n          end: {\n            line: 90,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 90,\n            column: 47\n          },\n          end: {\n            line: 112,\n            column: 3\n          }\n        },\n        line: 90\n      },\n      '7': {\n        name: '(anonymous_7)',\n        decl: {\n          start: {\n            line: 108,\n            column: 49\n          },\n          end: {\n            line: 108,\n            column: 50\n          }\n        },\n        loc: {\n          start: {\n            line: 108,\n            column: 60\n          },\n          end: {\n            line: 110,\n            column: 5\n          }\n        },\n        line: 108\n      },\n      '8': {\n        name: '(anonymous_8)',\n        decl: {\n          start: {\n            line: 114,\n            column: 2\n          },\n          end: {\n            line: 114,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 114,\n            column: 36\n          },\n          end: {\n            line: 116,\n            column: 3\n          }\n        },\n        line: 114\n      },\n      '9': {\n        name: '(anonymous_9)',\n        decl: {\n          start: {\n            line: 127,\n            column: 2\n          },\n          end: {\n            line: 127,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 127,\n            column: 36\n          },\n          end: {\n            line: 129,\n            column: 3\n          }\n        },\n        line: 127\n      },\n      '10': {\n        name: '(anonymous_10)',\n        decl: {\n          start: {\n            line: 131,\n            column: 2\n          },\n          end: {\n            line: 131,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 131,\n            column: 49\n          },\n          end: {\n            line: 157,\n            column: 3\n          }\n        },\n        line: 131\n      },\n      '11': {\n        name: '(anonymous_11)',\n        decl: {\n          start: {\n            line: 159,\n            column: 2\n          },\n          end: {\n            line: 159,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 159,\n            column: 20\n          },\n          end: {\n            line: 161,\n            column: 3\n          }\n        },\n        line: 159\n      },\n      '12': {\n        name: '(anonymous_12)',\n        decl: {\n          start: {\n            line: 163,\n            column: 2\n          },\n          end: {\n            line: 163,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 163,\n            column: 51\n          },\n          end: {\n            line: 185,\n            column: 3\n          }\n        },\n        line: 163\n      },\n      '13': {\n        name: '(anonymous_13)',\n        decl: {\n          start: {\n            line: 181,\n            column: 49\n          },\n          end: {\n            line: 181,\n            column: 50\n          }\n        },\n        loc: {\n          start: {\n            line: 181,\n            column: 60\n          },\n          end: {\n            line: 183,\n            column: 5\n          }\n        },\n        line: 181\n      },\n      '14': {\n        name: '(anonymous_14)',\n        decl: {\n          start: {\n            line: 187,\n            column: 2\n          },\n          end: {\n            line: 187,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 187,\n            column: 44\n          },\n          end: {\n            line: 197,\n            column: 3\n          }\n        },\n        line: 187\n      },\n      '15': {\n        name: '(anonymous_15)',\n        decl: {\n          start: {\n            line: 199,\n            column: 2\n          },\n          end: {\n            line: 199,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 199,\n            column: 49\n          },\n          end: {\n            line: 213,\n            column: 3\n          }\n        },\n        line: 199\n      },\n      '16': {\n        name: '(anonymous_16)',\n        decl: {\n          start: {\n            line: 210,\n            column: 13\n          },\n          end: {\n            line: 210,\n            column: 14\n          }\n        },\n        loc: {\n          start: {\n            line: 210,\n            column: 22\n          },\n          end: {\n            line: 212,\n            column: 7\n          }\n        },\n        line: 210\n      }\n    },\n    branchMap: {\n      '0': {\n        loc: {\n          start: {\n            line: 53,\n            column: 11\n          },\n          end: {\n            line: 53,\n            column: 68\n          }\n        },\n        type: 'binary-expr',\n        locations: [{\n          start: {\n            line: 53,\n            column: 11\n          },\n          end: {\n            line: 53,\n            column: 40\n          }\n        }, {\n          start: {\n            line: 53,\n            column: 44\n          },\n          end: {\n            line: 53,\n            column: 68\n          }\n        }],\n        line: 53\n      },\n      '1': {\n        loc: {\n          start: {\n            line: 56,\n            column: 21\n          },\n          end: {\n            line: 56,\n            column: 86\n          }\n        },\n        type: 'cond-expr',\n        locations: [{\n          start: {\n            line: 56,\n            column: 51\n          },\n          end: {\n            line: 56,\n            column: 64\n          }\n        }, {\n          start: {\n            line: 56,\n            column: 67\n          },\n          end: {\n            line: 56,\n            column: 86\n          }\n        }],\n        line: 56\n      },\n      '2': {\n        loc: {\n          start: {\n            line: 70,\n            column: 6\n          },\n          end: {\n            line: 72,\n            column: 7\n          }\n        },\n        type: 'if',\n        locations: [{\n          start: {\n            line: 70,\n            column: 6\n          },\n          end: {\n            line: 72,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 70,\n            column: 6\n          },\n          end: {\n            line: 72,\n            column: 7\n          }\n        }],\n        line: 70\n      },\n      '3': {\n        loc: {\n          start: {\n            line: 147,\n            column: 6\n          },\n          end: {\n            line: 154,\n            column: 7\n          }\n        },\n        type: 'if',\n        locations: [{\n          start: {\n            line: 147,\n            column: 6\n          },\n          end: {\n            line: 154,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 147,\n            column: 6\n          },\n          end: {\n            line: 154,\n            column: 7\n          }\n        }],\n        line: 147\n      },\n      '4': {\n        loc: {\n          start: {\n            line: 148,\n            column: 8\n          },\n          end: {\n            line: 153,\n            column: 9\n          }\n        },\n        type: 'if',\n        locations: [{\n          start: {\n            line: 148,\n            column: 8\n          },\n          end: {\n            line: 153,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 148,\n            column: 8\n          },\n          end: {\n            line: 153,\n            column: 9\n          }\n        }],\n        line: 148\n      },\n      '5': {\n        loc: {\n          start: {\n            line: 149,\n            column: 10\n          },\n          end: {\n            line: 151,\n            column: 11\n          }\n        },\n        type: 'if',\n        locations: [{\n          start: {\n            line: 149,\n            column: 10\n          },\n          end: {\n            line: 151,\n            column: 11\n          }\n        }, {\n          start: {\n            line: 149,\n            column: 10\n          },\n          end: {\n            line: 151,\n            column: 11\n          }\n        }],\n        line: 149\n      }\n    },\n    s: {\n      '0': 0,\n      '1': 0,\n      '2': 0,\n      '3': 0,\n      '4': 0,\n      '5': 0,\n      '6': 0,\n      '7': 0,\n      '8': 0,\n      '9': 0,\n      '10': 0,\n      '11': 0,\n      '12': 0,\n      '13': 0,\n      '14': 0,\n      '15': 0,\n      '16': 0,\n      '17': 0,\n      '18': 0,\n      '19': 0,\n      '20': 0,\n      '21': 0,\n      '22': 0,\n      '23': 0,\n      '24': 0,\n      '25': 0,\n      '26': 0,\n      '27': 0,\n      '28': 0,\n      '29': 0,\n      '30': 0,\n      '31': 0,\n      '32': 0,\n      '33': 0,\n      '34': 0,\n      '35': 0,\n      '36': 0,\n      '37': 0,\n      '38': 0,\n      '39': 0,\n      '40': 0,\n      '41': 0,\n      '42': 0,\n      '43': 0,\n      '44': 0,\n      '45': 0,\n      '46': 0,\n      '47': 0,\n      '48': 0,\n      '49': 0,\n      '50': 0,\n      '51': 0,\n      '52': 0,\n      '53': 0,\n      '54': 0,\n      '55': 0,\n      '56': 0\n    },\n    f: {\n      '0': 0,\n      '1': 0,\n      '2': 0,\n      '3': 0,\n      '4': 0,\n      '5': 0,\n      '6': 0,\n      '7': 0,\n      '8': 0,\n      '9': 0,\n      '10': 0,\n      '11': 0,\n      '12': 0,\n      '13': 0,\n      '14': 0,\n      '15': 0,\n      '16': 0\n    },\n    b: {\n      '0': [0, 0],\n      '1': [0, 0],\n      '2': [0, 0],\n      '3': [0, 0],\n      '4': [0, 0],\n      '5': [0, 0]\n    },\n    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'\n  },\n      coverage = global[gcv] || (global[gcv] = {});\n\n  if (coverage[path] && coverage[path].hash === hash) {\n    return coverage[path];\n  }\n\n  coverageData.hash = hash;\n  return coverage[path] = coverageData;\n}();\n\nconst DATASET_SIZE_QUERY_1 = (cov_1lxj7po26n.s[0]++, 'select (count(*) as ?count) {?s ?p ?o}');\nconst DATASET_SIZE_QUERY_2 = (cov_1lxj7po26n.s[1]++, 'select ?g (count(*) as ?count) {graph ?g {?s ?p ?o}} group by ?g');\nconst DATASET_COUNT_GRAPH_QUERY_1 = (cov_1lxj7po26n.s[2]++, 'select (count(*) as ?count) {?s ?p ?o}');\nconst DATASET_COUNT_GRAPH_QUERY_2 = (cov_1lxj7po26n.s[3]++, 'select ?g (count(*) as ?count) {graph ?g {?s ?p ?o}} group by ?g');\n\nclass FusekiService {\n  constructor(location) {\n    cov_1lxj7po26n.f[0]++;\n    cov_1lxj7po26n.s[4]++;\n    this.isOffline = true;\n    cov_1lxj7po26n.s[5]++;\n    this.pathname = location.pathname;\n  }\n\n  getFusekiUrl(url) {\n    cov_1lxj7po26n.f[1]++;\n    let normalizedUrl = (cov_1lxj7po26n.s[6]++, url);\n    cov_1lxj7po26n.s[7]++;\n\n    while ((cov_1lxj7po26n.b[0][0]++, normalizedUrl.startsWith('/')) && (cov_1lxj7po26n.b[0][1]++, normalizedUrl.length > 0)) {\n      cov_1lxj7po26n.s[8]++;\n      normalizedUrl = normalizedUrl.slice(1);\n    }\n\n    const pathname = (cov_1lxj7po26n.s[9]++, this.pathname.endsWith('/') ? (cov_1lxj7po26n.b[1][0]++, this.pathname) : (cov_1lxj7po26n.b[1][1]++, `${this.pathname}/`));\n    cov_1lxj7po26n.s[10]++;\n    return `${pathname}${normalizedUrl}`;\n  }\n\n  async getServerData() {\n    cov_1lxj7po26n.f[2]++;\n    const response = (cov_1lxj7po26n.s[11]++, await _axios.default.get(this.getFusekiUrl('/$/server')));\n    cov_1lxj7po26n.s[12]++;\n    return response.data;\n  }\n\n  async getServerStatus() {\n    cov_1lxj7po26n.f[3]++;\n    const startTime = (cov_1lxj7po26n.s[13]++, new Date().getTime());\n    cov_1lxj7po26n.s[14]++;\n\n    try {\n      cov_1lxj7po26n.s[15]++;\n      await _axios.default.get(this.getFusekiUrl('/$/ping'));\n      cov_1lxj7po26n.s[16]++;\n\n      if (this.isOffline) {\n        cov_1lxj7po26n.b[2][0]++;\n        cov_1lxj7po26n.s[17]++;\n\n        _events.BUS.$emit('connection:reset');\n      } else {\n        cov_1lxj7po26n.b[2][1]++;\n      }\n\n      cov_1lxj7po26n.s[18]++;\n      this.isOffline = false;\n      cov_1lxj7po26n.s[19]++;\n      return new _server.default(true, `Last ping returned OK in ${this._duration(startTime)}ms`);\n    } catch (error) {\n      cov_1lxj7po26n.s[20]++;\n      this.isOffline = true;\n      cov_1lxj7po26n.s[21]++;\n      return new _server.default(false, `Last ping returned \"${error}\" in ${this._duration(startTime)}ms`);\n    }\n  }\n\n  _duration(startTime) {\n    cov_1lxj7po26n.f[4]++;\n    cov_1lxj7po26n.s[22]++;\n    return new Date().getTime() - startTime;\n  }\n\n  async getDatasetStats(datasetName) {\n    cov_1lxj7po26n.f[5]++;\n    const response = (cov_1lxj7po26n.s[23]++, await _axios.default.get(this.getFusekiUrl(`/$/stats/${datasetName}`)));\n    cov_1lxj7po26n.s[24]++;\n    return response.data;\n  }\n\n  async getDatasetSize(datasetName, endpoint) {\n    cov_1lxj7po26n.f[6]++;\n    const promisesResult = (cov_1lxj7po26n.s[25]++, await Promise.all([_axios.default.get(this.getFusekiUrl(`/${datasetName}/${endpoint}`), {\n      params: {\n        query: DATASET_SIZE_QUERY_1\n      }\n    }), _axios.default.get(this.getFusekiUrl(`/${datasetName}/${endpoint}`), {\n      params: {\n        query: DATASET_SIZE_QUERY_2\n      }\n    })]));\n    const results = (cov_1lxj7po26n.s[26]++, {});\n    const defaultGraphResult = (cov_1lxj7po26n.s[27]++, promisesResult[0]);\n    cov_1lxj7po26n.s[28]++;\n    results['default graph'] = defaultGraphResult.data.results.bindings[0].count.value;\n    const allGraphResult = (cov_1lxj7po26n.s[29]++, promisesResult[1]);\n    cov_1lxj7po26n.s[30]++;\n    allGraphResult.data.results.bindings.forEach(binding => {\n      cov_1lxj7po26n.f[7]++;\n      cov_1lxj7po26n.s[31]++;\n      results[binding.g.value] = binding.count.value;\n    });\n    cov_1lxj7po26n.s[32]++;\n    return results;\n  }\n\n  async deleteDataset(datasetName) {\n    cov_1lxj7po26n.f[8]++;\n    cov_1lxj7po26n.s[33]++;\n    await _axios.default.delete(this.getFusekiUrl(`/$/datasets${datasetName}`));\n  }\n\n  async backupDataset(datasetName) {\n    cov_1lxj7po26n.f[9]++;\n    cov_1lxj7po26n.s[34]++;\n    return await _axios.default.post(this.getFusekiUrl(`/$/backup${datasetName}`));\n  }\n\n  async createDataset(datasetName, datasetType) {\n    cov_1lxj7po26n.f[10]++;\n    const data = (cov_1lxj7po26n.s[35]++, _qs.default.stringify({\n      dbName: datasetName,\n      dbType: datasetType\n    }));\n    const headers = (cov_1lxj7po26n.s[36]++, {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    });\n    cov_1lxj7po26n.s[37]++;\n\n    try {\n      cov_1lxj7po26n.s[38]++;\n      await _axios.default.post(this.getFusekiUrl('/$/datasets'), data, {\n        headers\n      });\n    } catch (error) {\n      cov_1lxj7po26n.s[39]++;\n\n      if (error.response) {\n        cov_1lxj7po26n.b[3][0]++;\n        cov_1lxj7po26n.s[40]++;\n\n        if (error.response.status !== 200) {\n          cov_1lxj7po26n.b[4][0]++;\n          cov_1lxj7po26n.s[41]++;\n\n          if (error.response.status === 409) {\n            cov_1lxj7po26n.b[5][0]++;\n            cov_1lxj7po26n.s[42]++;\n            throw new Error(`failed to create dataset \"${datasetName}\", reason: there is another dataset with the same name`);\n          } else {\n            cov_1lxj7po26n.b[5][1]++;\n          }\n\n          cov_1lxj7po26n.s[43]++;\n          throw new Error(`failed to create dataset \"${datasetName}\" with type ${datasetType}, reason: HTTP status: \"${error.response.status}\", message: ${error.response.statusText}`);\n        } else {\n          cov_1lxj7po26n.b[4][1]++;\n        }\n      } else {\n        cov_1lxj7po26n.b[3][1]++;\n      }\n\n      cov_1lxj7po26n.s[44]++;\n      throw error;\n    }\n  }\n\n  async getTasks() {\n    cov_1lxj7po26n.f[11]++;\n    cov_1lxj7po26n.s[45]++;\n    return _axios.default.get(this.getFusekiUrl('/$/tasks'));\n  }\n\n  async countGraphsTriples(datasetName, endpoint) {\n    cov_1lxj7po26n.f[12]++;\n    const promisesResult = (cov_1lxj7po26n.s[46]++, await Promise.all([_axios.default.get(this.getFusekiUrl(`/${datasetName}/${endpoint}`), {\n      params: {\n        query: DATASET_COUNT_GRAPH_QUERY_1\n      }\n    }), _axios.default.get(this.getFusekiUrl(`/${datasetName}/${endpoint}`), {\n      params: {\n        query: DATASET_COUNT_GRAPH_QUERY_2\n      }\n    })]));\n    const results = (cov_1lxj7po26n.s[47]++, {});\n    const defaultGraphResult = (cov_1lxj7po26n.s[48]++, promisesResult[0]);\n    cov_1lxj7po26n.s[49]++;\n    results.default = defaultGraphResult.data.results.bindings[0].count.value;\n    const allGraphResult = (cov_1lxj7po26n.s[50]++, promisesResult[1]);\n    cov_1lxj7po26n.s[51]++;\n    allGraphResult.data.results.bindings.forEach(binding => {\n      cov_1lxj7po26n.f[13]++;\n      cov_1lxj7po26n.s[52]++;\n      results[binding.g.value] = binding.count.value;\n    });\n    cov_1lxj7po26n.s[53]++;\n    return results;\n  }\n\n  async fetchGraph(datasetName, graphName) {\n    cov_1lxj7po26n.f[14]++;\n    cov_1lxj7po26n.s[54]++;\n    return await _axios.default.get(this.getFusekiUrl(`/${datasetName}`), {\n      params: {\n        graph: graphName\n      },\n      headers: {\n        Accept: 'text/turtle; charset=utf-8'\n      }\n    });\n  }\n\n  async saveGraph(datasetName, graphName, code) {\n    cov_1lxj7po26n.f[15]++;\n    cov_1lxj7po26n.s[55]++;\n    return await _axios.default.put(this.getFusekiUrl(`/${datasetName}`), code, {\n      params: {\n        graph: graphName\n      },\n      headers: {\n        Accept: 'application/json, text/javascript, */*; q=0.01',\n        'Content-Type': 'text/turtle; charset=UTF-8'\n      }\n    }).catch(error => {\n      cov_1lxj7po26n.f[16]++;\n      cov_1lxj7po26n.s[56]++;\n      throw new Error(error.response.data);\n    });\n  }\n\n}\n\nvar _default = FusekiService;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}