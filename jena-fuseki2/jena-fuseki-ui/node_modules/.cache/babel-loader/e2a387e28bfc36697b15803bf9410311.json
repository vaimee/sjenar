{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/progs/vaimee/sjenar/jena-fuseki2/jena-fuseki-ui/node_modules/@babel/runtime/helpers/interopRequireDefault.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _server = _interopRequireDefault(require(\"@/model/server.status\"));\n\nvar cov_od1om8hxp = function () {\n  var path = 'C:\\\\progs\\\\vaimee\\\\sjenar\\\\jena-fuseki2\\\\jena-fuseki-ui\\\\src\\\\components\\\\ServerStatus.vue',\n      hash = '94bc6514258b1280f84fb5a8e2983fbfc1b19830',\n      Function = function () {}.constructor,\n      global = new Function('return this')(),\n      gcv = '__coverage__',\n      coverageData = {\n    path: 'C:\\\\progs\\\\vaimee\\\\sjenar\\\\jena-fuseki2\\\\jena-fuseki-ui\\\\src\\\\components\\\\ServerStatus.vue',\n    statementMap: {\n      '0': {\n        start: {\n          line: 35,\n          column: 4\n        },\n        end: {\n          line: 40,\n          column: 5\n        }\n      },\n      '1': {\n        start: {\n          line: 45,\n          column: 6\n        },\n        end: {\n          line: 49,\n          column: 7\n        }\n      },\n      '2': {\n        start: {\n          line: 46,\n          column: 8\n        },\n        end: {\n          line: 48,\n          column: 9\n        }\n      },\n      '3': {\n        start: {\n          line: 50,\n          column: 6\n        },\n        end: {\n          line: 52,\n          column: 7\n        }\n      },\n      '4': {\n        start: {\n          line: 55,\n          column: 6\n        },\n        end: {\n          line: 57,\n          column: 7\n        }\n      },\n      '5': {\n        start: {\n          line: 56,\n          column: 8\n        },\n        end: {\n          line: 56,\n          column: 40\n        }\n      },\n      '6': {\n        start: {\n          line: 58,\n          column: 6\n        },\n        end: {\n          line: 58,\n          column: 15\n        }\n      },\n      '7': {\n        start: {\n          line: 63,\n          column: 4\n        },\n        end: {\n          line: 63,\n          column: 67\n        }\n      },\n      '8': {\n        start: {\n          line: 64,\n          column: 4\n        },\n        end: {\n          line: 66,\n          column: 12\n        }\n      },\n      '9': {\n        start: {\n          line: 65,\n          column: 6\n        },\n        end: {\n          line: 65,\n          column: 69\n        }\n      },\n      '10': {\n        start: {\n          line: 70,\n          column: 4\n        },\n        end: {\n          line: 70,\n          column: 32\n        }\n      },\n      '11': {\n        start: {\n          line: 71,\n          column: 4\n        },\n        end: {\n          line: 71,\n          column: 24\n        }\n      }\n    },\n    fnMap: {\n      '0': {\n        name: '(anonymous_0)',\n        decl: {\n          start: {\n            line: 64,\n            column: 32\n          },\n          end: {\n            line: 64,\n            column: 33\n          }\n        },\n        loc: {\n          start: {\n            line: 64,\n            column: 44\n          },\n          end: {\n            line: 66,\n            column: 5\n          }\n        },\n        line: 64\n      }\n    },\n    branchMap: {\n      '0': {\n        loc: {\n          start: {\n            line: 45,\n            column: 6\n          },\n          end: {\n            line: 49,\n            column: 7\n          }\n        },\n        type: 'if',\n        locations: [{\n          start: {\n            line: 45,\n            column: 6\n          },\n          end: {\n            line: 49,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 45,\n            column: 6\n          },\n          end: {\n            line: 49,\n            column: 7\n          }\n        }],\n        line: 45\n      },\n      '1': {\n        loc: {\n          start: {\n            line: 45,\n            column: 10\n          },\n          end: {\n            line: 45,\n            column: 55\n          }\n        },\n        type: 'binary-expr',\n        locations: [{\n          start: {\n            line: 45,\n            column: 10\n          },\n          end: {\n            line: 45,\n            column: 27\n          }\n        }, {\n          start: {\n            line: 45,\n            column: 31\n          },\n          end: {\n            line: 45,\n            column: 55\n          }\n        }],\n        line: 45\n      },\n      '2': {\n        loc: {\n          start: {\n            line: 55,\n            column: 6\n          },\n          end: {\n            line: 57,\n            column: 7\n          }\n        },\n        type: 'if',\n        locations: [{\n          start: {\n            line: 55,\n            column: 6\n          },\n          end: {\n            line: 57,\n            column: 7\n          }\n        }, {\n          start: {\n            line: 55,\n            column: 6\n          },\n          end: {\n            line: 57,\n            column: 7\n          }\n        }],\n        line: 55\n      }\n    },\n    s: {\n      '0': 0,\n      '1': 0,\n      '2': 0,\n      '3': 0,\n      '4': 0,\n      '5': 0,\n      '6': 0,\n      '7': 0,\n      '8': 0,\n      '9': 0,\n      '10': 0,\n      '11': 0\n    },\n    f: {\n      '0': 0\n    },\n    b: {\n      '0': [0, 0],\n      '1': [0, 0],\n      '2': [0, 0]\n    },\n    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'\n  },\n      coverage = global[gcv] || (global[gcv] = {});\n\n  if (coverage[path] && coverage[path].hash === hash) {\n    return coverage[path];\n  }\n\n  coverageData.hash = hash;\n  return coverage[path] = coverageData;\n}();\n\nvar _default = {\n  name: 'ServerStatus',\n\n  data() {\n    cov_od1om8hxp.s[0]++;\n    return {\n      serverStatus: null\n    };\n  },\n\n  computed: {\n    isUp() {\n      cov_od1om8hxp.s[1]++;\n\n      if ((cov_od1om8hxp.b[1][0]++, this.serverStatus) && (cov_od1om8hxp.b[1][1]++, this.serverStatus.online)) {\n        cov_od1om8hxp.b[0][0]++;\n        cov_od1om8hxp.s[2]++;\n        return {\n          success: true\n        };\n      } else {\n        cov_od1om8hxp.b[0][1]++;\n      }\n\n      cov_od1om8hxp.s[3]++;\n      return {\n        failure: true\n      };\n    },\n\n    serverStatusText() {\n      cov_od1om8hxp.s[4]++;\n\n      if (this.serverStatus) {\n        cov_od1om8hxp.b[2][0]++;\n        cov_od1om8hxp.s[5]++;\n        return this.serverStatus.message;\n      } else {\n        cov_od1om8hxp.b[2][1]++;\n      }\n\n      cov_od1om8hxp.s[6]++;\n      return '';\n    }\n\n  },\n\n  async created() {\n    cov_od1om8hxp.s[7]++;\n    this.serverStatus = await this.$fusekiService.getServerStatus();\n    cov_od1om8hxp.s[8]++;\n    this.interval = setInterval(async () => {\n      cov_od1om8hxp.f[0]++;\n      cov_od1om8hxp.s[9]++;\n      this.serverStatus = await this.$fusekiService.getServerStatus();\n    }, 5000);\n  },\n\n  beforeDestroy() {\n    cov_od1om8hxp.s[10]++;\n    clearInterval(this.interval);\n    cov_od1om8hxp.s[11]++;\n    this.interval = null;\n  }\n\n};\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}