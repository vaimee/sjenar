{"ast":null,"code":"function cov_2ewccedl4z() {\n  var path = \"C:\\\\progs\\\\vaimee\\\\sjenar\\\\jena-fuseki2\\\\jena-fuseki-ui\\\\src\\\\views\\\\manage\\\\NewDataset.vue\";\n  var hash = \"9fdc512508cd3a5b38c978771a2e2a7bfeceae98\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"C:\\\\progs\\\\vaimee\\\\sjenar\\\\jena-fuseki2\\\\jena-fuseki-ui\\\\src\\\\views\\\\manage\\\\NewDataset.vue\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 98,\n          column: 0\n        },\n        end: {\n          line: 98,\n          column: 20\n        }\n      },\n      \"1\": {\n        start: {\n          line: 109,\n          column: 4\n        },\n        end: {\n          line: 128,\n          column: 5\n        }\n      },\n      \"2\": {\n        start: {\n          line: 133,\n          column: 6\n        },\n        end: {\n          line: 133,\n          column: 26\n        }\n      },\n      \"3\": {\n        start: {\n          line: 134,\n          column: 6\n        },\n        end: {\n          line: 148,\n          column: 7\n        }\n      },\n      \"4\": {\n        start: {\n          line: 135,\n          column: 8\n        },\n        end: {\n          line: 135,\n          column: 93\n        }\n      },\n      \"5\": {\n        start: {\n          line: 136,\n          column: 8\n        },\n        end: {\n          line: 136,\n          column: 42\n        }\n      },\n      \"6\": {\n        start: {\n          line: 137,\n          column: 8\n        },\n        end: {\n          line: 141,\n          column: 10\n        }\n      },\n      \"7\": {\n        start: {\n          line: 143,\n          column: 8\n        },\n        end: {\n          line: 147,\n          column: 10\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 108,\n            column: 2\n          },\n          end: {\n            line: 108,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 108,\n            column: 10\n          },\n          end: {\n            line: 129,\n            column: 3\n          }\n        },\n        line: 108\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 132,\n            column: 4\n          },\n          end: {\n            line: 132,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 132,\n            column: 25\n          },\n          end: {\n            line: 149,\n            column: 5\n          }\n        },\n        line: 132\n      }\n    },\n    branchMap: {},\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0\n    },\n    b: {},\n    inputSourceMap: {\n      version: 3,\n      sources: [\"NewDataset.vue\"],\n      names: [],\n      mappings: \";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA\",\n      file: \"NewDataset.vue\",\n      sourceRoot: \"src/views/manage\",\n      sourcesContent: [\"<!--\\n   Licensed to the Apache Software Foundation (ASF) under one or more\\n   contributor license agreements.  See the NOTICE file distributed with\\n   this work for additional information regarding copyright ownership.\\n   The ASF licenses this file to You under the Apache License, Version 2.0\\n   (the \\\"License\\\"); you may not use this file except in compliance with\\n   the License.  You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n-->\\n\\n<template>\\n  <b-container fluid>\\n    <b-row class=\\\"mt-4\\\">\\n      <b-col cols=\\\"12\\\">\\n        <h2>New dataset</h2>\\n        <b-card no-body>\\n          <b-card-header header-tag=\\\"nav\\\">\\n            <Menu />\\n          </b-card-header>\\n          <b-card-body>\\n            <b-container fluid>\\n              <b-row>\\n                <b-col cols=\\\"12\\\">\\n                  <b-form\\n                    @submit=\\\"onSubmit\\\"\\n                    ref=\\\"form\\\"\\n                  >\\n                    <b-form-group\\n                      id=\\\"dataset-name-group\\\"\\n                      label=\\\"Dataset name\\\"\\n                      label-for=\\\"dataset-name\\\"\\n                      label-cols=\\\"4\\\"\\n                      label-cols-lg=\\\"2\\\"\\n                      label-size=\\\"sm\\\"\\n                    >\\n                      <b-form-input\\n                        pattern=\\\"[^\\\\s]+\\\"\\n                        oninvalid=\\\"this.setCustomValidity('Enter a valid dataset name, without spaces')\\\"\\n                        oninput=\\\"this.setCustomValidity('')\\\"\\n                        id=\\\"dataset-name\\\"\\n                        v-model=\\\"form.datasetName\\\"\\n                        type=\\\"text\\\"\\n                        placeholder=\\\"dataset name\\\"\\n                        required\\n                        trim\\n                      ></b-form-input>\\n                    </b-form-group>\\n                    <b-form-group\\n                      id=\\\"dataset-type-group\\\"\\n                      label=\\\"Dataset type\\\"\\n                      label-for=\\\"dataset-type\\\"\\n                      label-cols=\\\"4\\\"\\n                      label-cols-lg=\\\"2\\\"\\n                      label-size=\\\"sm\\\"\\n                    >\\n                      <b-form-radio-group\\n                        :options=\\\"datasetTypes\\\"\\n                        value-field=\\\"item\\\"\\n                        text-field=\\\"name\\\"\\n                        v-model=\\\"form.datasetType\\\"\\n                        name=\\\"dataset-type\\\"\\n                        required\\n                        stacked\\n                      >\\n                      </b-form-radio-group>\\n                    </b-form-group>\\n                    <b-button\\n                      type=\\\"submit\\\"\\n                      variant=\\\"primary\\\"\\n                    >\\n                      <FontAwesomeIcon icon=\\\"check\\\" />\\n                      <span class=\\\"ml-1\\\">create dataset</span>\\n                    </b-button>\\n                  </b-form>\\n                </b-col>\\n              </b-row>\\n           </b-container>\\n          </b-card-body>\\n        </b-card>\\n      </b-col>\\n    </b-row>\\n  </b-container>\\n</template>\\n\\n<script>\\nimport Menu from '@/components/manage/Menu'\\nimport { library } from '@fortawesome/fontawesome-svg-core'\\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\\n\\nlibrary.add(faCheck)\\n\\nexport default {\\n  name: 'NewDataset',\\n\\n  components: {\\n    Menu,\\n    FontAwesomeIcon\\n  },\\n\\n  data () {\\n    return {\\n      form: {\\n        datasetName: null,\\n        datasetType: null\\n      },\\n      datasetTypes: [\\n        {\\n          item: 'mem',\\n          name: 'In-memory \\u2013 dataset will be recreated when Fuseki restarts, but contents will be lost'\\n        },\\n        // {\\n        //   item: 'tdb',\\n        //   name: 'Persistent \\u2013 dataset will persist across Fuseki restart'\\n        // },\\n        {\\n          item: 'tdb2',\\n          name: 'Persistent (TDB2) \\u2013 dataset will persist across Fuseki restarts'\\n        }\\n      ]\\n    }\\n  },\\n\\n  methods: {\\n    async onSubmit (evt) {\\n      evt.preventDefault()\\n      try {\\n        await this.$fusekiService.createDataset(this.form.datasetName, this.form.datasetType)\\n        await this.$router.push('/manage')\\n        this.$bvToast.toast(`Dataset \\\"${this.form.datasetName}\\\" created`, {\\n          title: 'Notification',\\n          autoHideDelay: 5000,\\n          appendToast: false\\n        })\\n      } catch (error) {\\n        this.$bvToast.toast(`${error}`, {\\n          title: 'Error',\\n          noAutoHide: true,\\n          appendToast: false\\n        })\\n      }\\n    }\\n  }\\n}\\n</script>\\n\"]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"9fdc512508cd3a5b38c978771a2e2a7bfeceae98\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_2ewccedl4z = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_2ewccedl4z();\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Menu from '@/components/manage/Menu';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\ncov_2ewccedl4z().s[0]++;\nlibrary.add(faCheck);\nexport default {\n  name: 'NewDataset',\n  components: {\n    Menu,\n    FontAwesomeIcon\n  },\n\n  data() {\n    cov_2ewccedl4z().f[0]++;\n    cov_2ewccedl4z().s[1]++;\n    return {\n      form: {\n        datasetName: null,\n        datasetType: null\n      },\n      datasetTypes: [{\n        item: 'mem',\n        name: 'In-memory – dataset will be recreated when Fuseki restarts, but contents will be lost'\n      }, // {\n      //   item: 'tdb',\n      //   name: 'Persistent – dataset will persist across Fuseki restart'\n      // },\n      {\n        item: 'tdb2',\n        name: 'Persistent (TDB2) – dataset will persist across Fuseki restarts'\n      }]\n    };\n  },\n\n  methods: {\n    async onSubmit(evt) {\n      cov_2ewccedl4z().f[1]++;\n      cov_2ewccedl4z().s[2]++;\n      evt.preventDefault();\n      cov_2ewccedl4z().s[3]++;\n\n      try {\n        cov_2ewccedl4z().s[4]++;\n        await this.$fusekiService.createDataset(this.form.datasetName, this.form.datasetType);\n        cov_2ewccedl4z().s[5]++;\n        await this.$router.push('/manage');\n        cov_2ewccedl4z().s[6]++;\n        this.$bvToast.toast(`Dataset \"${this.form.datasetName}\" created`, {\n          title: 'Notification',\n          autoHideDelay: 5000,\n          appendToast: false\n        });\n      } catch (error) {\n        cov_2ewccedl4z().s[7]++;\n        this.$bvToast.toast(`${error}`, {\n          title: 'Error',\n          noAutoHide: true,\n          appendToast: false\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;AACA;AACA;AACA;;AAEAA;AAEA;AACAC,oBADA;AAGAC;AACAC,QADA;AAEAC;AAFA,GAHA;;AAQAC;AAAA;AAAA;AACA;AACAC;AACAC,yBADA;AAEAC;AAFA,OADA;AAKAC,qBACA;AACAC,mBADA;AAEAT;AAFA,OADA,EAKA;AACA;AACA;AACA;AACA;AACAS,oBADA;AAEAT;AAFA,OATA;AALA;AAoBA,GA7BA;;AA+BAU;AACA;AAAA;AAAA;AACAC;AADA;;AAEA;AAAA;AACA;AADA;AAEA;AAFA;AAGA;AACAC,+BADA;AAEAC,6BAFA;AAGAC;AAHA;AAKA,OARA,CAQA;AAAA;AACA;AACAF,wBADA;AAEAG,0BAFA;AAGAD;AAHA;AAKA;AACA;;AAlBA;AA/BA","names":["library","name","components","Menu","FontAwesomeIcon","data","form","datasetName","datasetType","datasetTypes","item","methods","evt","title","autoHideDelay","appendToast","noAutoHide"],"sourceRoot":"src/views/manage","sources":["NewDataset.vue"],"sourcesContent":["<!--\n   Licensed to the Apache Software Foundation (ASF) under one or more\n   contributor license agreements.  See the NOTICE file distributed with\n   this work for additional information regarding copyright ownership.\n   The ASF licenses this file to You under the Apache License, Version 2.0\n   (the \"License\"); you may not use this file except in compliance with\n   the License.  You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n-->\n\n<template>\n  <b-container fluid>\n    <b-row class=\"mt-4\">\n      <b-col cols=\"12\">\n        <h2>New dataset</h2>\n        <b-card no-body>\n          <b-card-header header-tag=\"nav\">\n            <Menu />\n          </b-card-header>\n          <b-card-body>\n            <b-container fluid>\n              <b-row>\n                <b-col cols=\"12\">\n                  <b-form\n                    @submit=\"onSubmit\"\n                    ref=\"form\"\n                  >\n                    <b-form-group\n                      id=\"dataset-name-group\"\n                      label=\"Dataset name\"\n                      label-for=\"dataset-name\"\n                      label-cols=\"4\"\n                      label-cols-lg=\"2\"\n                      label-size=\"sm\"\n                    >\n                      <b-form-input\n                        pattern=\"[^\\s]+\"\n                        oninvalid=\"this.setCustomValidity('Enter a valid dataset name, without spaces')\"\n                        oninput=\"this.setCustomValidity('')\"\n                        id=\"dataset-name\"\n                        v-model=\"form.datasetName\"\n                        type=\"text\"\n                        placeholder=\"dataset name\"\n                        required\n                        trim\n                      ></b-form-input>\n                    </b-form-group>\n                    <b-form-group\n                      id=\"dataset-type-group\"\n                      label=\"Dataset type\"\n                      label-for=\"dataset-type\"\n                      label-cols=\"4\"\n                      label-cols-lg=\"2\"\n                      label-size=\"sm\"\n                    >\n                      <b-form-radio-group\n                        :options=\"datasetTypes\"\n                        value-field=\"item\"\n                        text-field=\"name\"\n                        v-model=\"form.datasetType\"\n                        name=\"dataset-type\"\n                        required\n                        stacked\n                      >\n                      </b-form-radio-group>\n                    </b-form-group>\n                    <b-button\n                      type=\"submit\"\n                      variant=\"primary\"\n                    >\n                      <FontAwesomeIcon icon=\"check\" />\n                      <span class=\"ml-1\">create dataset</span>\n                    </b-button>\n                  </b-form>\n                </b-col>\n              </b-row>\n           </b-container>\n          </b-card-body>\n        </b-card>\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\nimport Menu from '@/components/manage/Menu'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\n\nlibrary.add(faCheck)\n\nexport default {\n  name: 'NewDataset',\n\n  components: {\n    Menu,\n    FontAwesomeIcon\n  },\n\n  data () {\n    return {\n      form: {\n        datasetName: null,\n        datasetType: null\n      },\n      datasetTypes: [\n        {\n          item: 'mem',\n          name: 'In-memory – dataset will be recreated when Fuseki restarts, but contents will be lost'\n        },\n        // {\n        //   item: 'tdb',\n        //   name: 'Persistent – dataset will persist across Fuseki restart'\n        // },\n        {\n          item: 'tdb2',\n          name: 'Persistent (TDB2) – dataset will persist across Fuseki restarts'\n        }\n      ]\n    }\n  },\n\n  methods: {\n    async onSubmit (evt) {\n      evt.preventDefault()\n      try {\n        await this.$fusekiService.createDataset(this.form.datasetName, this.form.datasetType)\n        await this.$router.push('/manage')\n        this.$bvToast.toast(`Dataset \"${this.form.datasetName}\" created`, {\n          title: 'Notification',\n          autoHideDelay: 5000,\n          appendToast: false\n        })\n      } catch (error) {\n        this.$bvToast.toast(`${error}`, {\n          title: 'Error',\n          noAutoHide: true,\n          appendToast: false\n        })\n      }\n    }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}