{"ast":null,"code":"import _asyncToGenerator from \"C:/progs/vaimee/sjenar/jena-fuseki2/jena-fuseki-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/progs/vaimee/sjenar/jena-fuseki2/jena-fuseki-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/progs/vaimee/sjenar/jena-fuseki2/jena-fuseki-ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nfunction cov_1lxj7po26n() {\n  var path = \"C:\\\\progs\\\\vaimee\\\\sjenar\\\\jena-fuseki2\\\\jena-fuseki-ui\\\\src\\\\services\\\\fuseki.service.js\";\n  var hash = \"b8b9cce371e8d78c3f81f2973b719a646188b966\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"C:\\\\progs\\\\vaimee\\\\sjenar\\\\jena-fuseki2\\\\jena-fuseki-ui\\\\src\\\\services\\\\fuseki.service.js\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 23,\n          column: 29\n        },\n        end: {\n          line: 23,\n          column: 69\n        }\n      },\n      \"1\": {\n        start: {\n          line: 24,\n          column: 29\n        },\n        end: {\n          line: 24,\n          column: 95\n        }\n      },\n      \"2\": {\n        start: {\n          line: 26,\n          column: 36\n        },\n        end: {\n          line: 26,\n          column: 76\n        }\n      },\n      \"3\": {\n        start: {\n          line: 27,\n          column: 36\n        },\n        end: {\n          line: 27,\n          column: 102\n        }\n      },\n      \"4\": {\n        start: {\n          line: 34,\n          column: 4\n        },\n        end: {\n          line: 34,\n          column: 25\n        }\n      },\n      \"5\": {\n        start: {\n          line: 35,\n          column: 4\n        },\n        end: {\n          line: 35,\n          column: 37\n        }\n      },\n      \"6\": {\n        start: {\n          line: 52,\n          column: 24\n        },\n        end: {\n          line: 52,\n          column: 27\n        }\n      },\n      \"7\": {\n        start: {\n          line: 53,\n          column: 4\n        },\n        end: {\n          line: 55,\n          column: 5\n        }\n      },\n      \"8\": {\n        start: {\n          line: 54,\n          column: 6\n        },\n        end: {\n          line: 54,\n          column: 44\n        }\n      },\n      \"9\": {\n        start: {\n          line: 56,\n          column: 21\n        },\n        end: {\n          line: 56,\n          column: 86\n        }\n      },\n      \"10\": {\n        start: {\n          line: 57,\n          column: 4\n        },\n        end: {\n          line: 57,\n          column: 40\n        }\n      },\n      \"11\": {\n        start: {\n          line: 61,\n          column: 21\n        },\n        end: {\n          line: 61,\n          column: 68\n        }\n      },\n      \"12\": {\n        start: {\n          line: 62,\n          column: 4\n        },\n        end: {\n          line: 62,\n          column: 24\n        }\n      },\n      \"13\": {\n        start: {\n          line: 66,\n          column: 22\n        },\n        end: {\n          line: 66,\n          column: 42\n        }\n      },\n      \"14\": {\n        start: {\n          line: 67,\n          column: 4\n        },\n        end: {\n          line: 78,\n          column: 5\n        }\n      },\n      \"15\": {\n        start: {\n          line: 68,\n          column: 6\n        },\n        end: {\n          line: 68,\n          column: 51\n        }\n      },\n      \"16\": {\n        start: {\n          line: 70,\n          column: 6\n        },\n        end: {\n          line: 72,\n          column: 7\n        }\n      },\n      \"17\": {\n        start: {\n          line: 71,\n          column: 8\n        },\n        end: {\n          line: 71,\n          column: 37\n        }\n      },\n      \"18\": {\n        start: {\n          line: 73,\n          column: 6\n        },\n        end: {\n          line: 73,\n          column: 28\n        }\n      },\n      \"19\": {\n        start: {\n          line: 74,\n          column: 6\n        },\n        end: {\n          line: 74,\n          column: 94\n        }\n      },\n      \"20\": {\n        start: {\n          line: 76,\n          column: 6\n        },\n        end: {\n          line: 76,\n          column: 27\n        }\n      },\n      \"21\": {\n        start: {\n          line: 77,\n          column: 6\n        },\n        end: {\n          line: 77,\n          column: 103\n        }\n      },\n      \"22\": {\n        start: {\n          line: 82,\n          column: 4\n        },\n        end: {\n          line: 82,\n          column: 43\n        }\n      },\n      \"23\": {\n        start: {\n          line: 86,\n          column: 21\n        },\n        end: {\n          line: 86,\n          column: 82\n        }\n      },\n      \"24\": {\n        start: {\n          line: 87,\n          column: 4\n        },\n        end: {\n          line: 87,\n          column: 24\n        }\n      },\n      \"25\": {\n        start: {\n          line: 91,\n          column: 27\n        },\n        end: {\n          line: 103,\n          column: 6\n        }\n      },\n      \"26\": {\n        start: {\n          line: 104,\n          column: 20\n        },\n        end: {\n          line: 104,\n          column: 22\n        }\n      },\n      \"27\": {\n        start: {\n          line: 105,\n          column: 31\n        },\n        end: {\n          line: 105,\n          column: 48\n        }\n      },\n      \"28\": {\n        start: {\n          line: 106,\n          column: 4\n        },\n        end: {\n          line: 106,\n          column: 86\n        }\n      },\n      \"29\": {\n        start: {\n          line: 107,\n          column: 27\n        },\n        end: {\n          line: 107,\n          column: 44\n        }\n      },\n      \"30\": {\n        start: {\n          line: 108,\n          column: 4\n        },\n        end: {\n          line: 110,\n          column: 6\n        }\n      },\n      \"31\": {\n        start: {\n          line: 109,\n          column: 6\n        },\n        end: {\n          line: 109,\n          column: 52\n        }\n      },\n      \"32\": {\n        start: {\n          line: 111,\n          column: 4\n        },\n        end: {\n          line: 111,\n          column: 18\n        }\n      },\n      \"33\": {\n        start: {\n          line: 115,\n          column: 4\n        },\n        end: {\n          line: 115,\n          column: 70\n        }\n      },\n      \"34\": {\n        start: {\n          line: 128,\n          column: 4\n        },\n        end: {\n          line: 128,\n          column: 73\n        }\n      },\n      \"35\": {\n        start: {\n          line: 132,\n          column: 17\n        },\n        end: {\n          line: 135,\n          column: 6\n        }\n      },\n      \"36\": {\n        start: {\n          line: 139,\n          column: 20\n        },\n        end: {\n          line: 141,\n          column: 5\n        }\n      },\n      \"37\": {\n        start: {\n          line: 142,\n          column: 4\n        },\n        end: {\n          line: 156,\n          column: 5\n        }\n      },\n      \"38\": {\n        start: {\n          line: 143,\n          column: 6\n        },\n        end: {\n          line: 145,\n          column: 8\n        }\n      },\n      \"39\": {\n        start: {\n          line: 147,\n          column: 6\n        },\n        end: {\n          line: 154,\n          column: 7\n        }\n      },\n      \"40\": {\n        start: {\n          line: 148,\n          column: 8\n        },\n        end: {\n          line: 153,\n          column: 9\n        }\n      },\n      \"41\": {\n        start: {\n          line: 149,\n          column: 10\n        },\n        end: {\n          line: 151,\n          column: 11\n        }\n      },\n      \"42\": {\n        start: {\n          line: 150,\n          column: 12\n        },\n        end: {\n          line: 150,\n          column: 125\n        }\n      },\n      \"43\": {\n        start: {\n          line: 152,\n          column: 10\n        },\n        end: {\n          line: 152,\n          column: 183\n        }\n      },\n      \"44\": {\n        start: {\n          line: 155,\n          column: 6\n        },\n        end: {\n          line: 155,\n          column: 17\n        }\n      },\n      \"45\": {\n        start: {\n          line: 160,\n          column: 4\n        },\n        end: {\n          line: 160,\n          column: 51\n        }\n      },\n      \"46\": {\n        start: {\n          line: 164,\n          column: 27\n        },\n        end: {\n          line: 176,\n          column: 6\n        }\n      },\n      \"47\": {\n        start: {\n          line: 177,\n          column: 20\n        },\n        end: {\n          line: 177,\n          column: 22\n        }\n      },\n      \"48\": {\n        start: {\n          line: 178,\n          column: 31\n        },\n        end: {\n          line: 178,\n          column: 48\n        }\n      },\n      \"49\": {\n        start: {\n          line: 179,\n          column: 4\n        },\n        end: {\n          line: 179,\n          column: 77\n        }\n      },\n      \"50\": {\n        start: {\n          line: 180,\n          column: 27\n        },\n        end: {\n          line: 180,\n          column: 44\n        }\n      },\n      \"51\": {\n        start: {\n          line: 181,\n          column: 4\n        },\n        end: {\n          line: 183,\n          column: 6\n        }\n      },\n      \"52\": {\n        start: {\n          line: 182,\n          column: 6\n        },\n        end: {\n          line: 182,\n          column: 52\n        }\n      },\n      \"53\": {\n        start: {\n          line: 184,\n          column: 4\n        },\n        end: {\n          line: 184,\n          column: 18\n        }\n      },\n      \"54\": {\n        start: {\n          line: 188,\n          column: 4\n        },\n        end: {\n          line: 196,\n          column: 8\n        }\n      },\n      \"55\": {\n        start: {\n          line: 200,\n          column: 4\n        },\n        end: {\n          line: 212,\n          column: 8\n        }\n      },\n      \"56\": {\n        start: {\n          line: 211,\n          column: 8\n        },\n        end: {\n          line: 211,\n          column: 44\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 33,\n            column: 2\n          },\n          end: {\n            line: 33,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 33,\n            column: 25\n          },\n          end: {\n            line: 36,\n            column: 3\n          }\n        },\n        line: 33\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 50,\n            column: 2\n          },\n          end: {\n            line: 50,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 50,\n            column: 21\n          },\n          end: {\n            line: 58,\n            column: 3\n          }\n        },\n        line: 50\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 60,\n            column: 2\n          },\n          end: {\n            line: 60,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 60,\n            column: 25\n          },\n          end: {\n            line: 63,\n            column: 3\n          }\n        },\n        line: 60\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 65,\n            column: 2\n          },\n          end: {\n            line: 65,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 65,\n            column: 27\n          },\n          end: {\n            line: 79,\n            column: 3\n          }\n        },\n        line: 65\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 81,\n            column: 2\n          },\n          end: {\n            line: 81,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 81,\n            column: 24\n          },\n          end: {\n            line: 83,\n            column: 3\n          }\n        },\n        line: 81\n      },\n      \"5\": {\n        name: \"(anonymous_5)\",\n        decl: {\n          start: {\n            line: 85,\n            column: 2\n          },\n          end: {\n            line: 85,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 85,\n            column: 38\n          },\n          end: {\n            line: 88,\n            column: 3\n          }\n        },\n        line: 85\n      },\n      \"6\": {\n        name: \"(anonymous_6)\",\n        decl: {\n          start: {\n            line: 90,\n            column: 2\n          },\n          end: {\n            line: 90,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 90,\n            column: 47\n          },\n          end: {\n            line: 112,\n            column: 3\n          }\n        },\n        line: 90\n      },\n      \"7\": {\n        name: \"(anonymous_7)\",\n        decl: {\n          start: {\n            line: 108,\n            column: 49\n          },\n          end: {\n            line: 108,\n            column: 50\n          }\n        },\n        loc: {\n          start: {\n            line: 108,\n            column: 60\n          },\n          end: {\n            line: 110,\n            column: 5\n          }\n        },\n        line: 108\n      },\n      \"8\": {\n        name: \"(anonymous_8)\",\n        decl: {\n          start: {\n            line: 114,\n            column: 2\n          },\n          end: {\n            line: 114,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 114,\n            column: 36\n          },\n          end: {\n            line: 116,\n            column: 3\n          }\n        },\n        line: 114\n      },\n      \"9\": {\n        name: \"(anonymous_9)\",\n        decl: {\n          start: {\n            line: 127,\n            column: 2\n          },\n          end: {\n            line: 127,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 127,\n            column: 36\n          },\n          end: {\n            line: 129,\n            column: 3\n          }\n        },\n        line: 127\n      },\n      \"10\": {\n        name: \"(anonymous_10)\",\n        decl: {\n          start: {\n            line: 131,\n            column: 2\n          },\n          end: {\n            line: 131,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 131,\n            column: 49\n          },\n          end: {\n            line: 157,\n            column: 3\n          }\n        },\n        line: 131\n      },\n      \"11\": {\n        name: \"(anonymous_11)\",\n        decl: {\n          start: {\n            line: 159,\n            column: 2\n          },\n          end: {\n            line: 159,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 159,\n            column: 20\n          },\n          end: {\n            line: 161,\n            column: 3\n          }\n        },\n        line: 159\n      },\n      \"12\": {\n        name: \"(anonymous_12)\",\n        decl: {\n          start: {\n            line: 163,\n            column: 2\n          },\n          end: {\n            line: 163,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 163,\n            column: 51\n          },\n          end: {\n            line: 185,\n            column: 3\n          }\n        },\n        line: 163\n      },\n      \"13\": {\n        name: \"(anonymous_13)\",\n        decl: {\n          start: {\n            line: 181,\n            column: 49\n          },\n          end: {\n            line: 181,\n            column: 50\n          }\n        },\n        loc: {\n          start: {\n            line: 181,\n            column: 60\n          },\n          end: {\n            line: 183,\n            column: 5\n          }\n        },\n        line: 181\n      },\n      \"14\": {\n        name: \"(anonymous_14)\",\n        decl: {\n          start: {\n            line: 187,\n            column: 2\n          },\n          end: {\n            line: 187,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 187,\n            column: 44\n          },\n          end: {\n            line: 197,\n            column: 3\n          }\n        },\n        line: 187\n      },\n      \"15\": {\n        name: \"(anonymous_15)\",\n        decl: {\n          start: {\n            line: 199,\n            column: 2\n          },\n          end: {\n            line: 199,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 199,\n            column: 49\n          },\n          end: {\n            line: 213,\n            column: 3\n          }\n        },\n        line: 199\n      },\n      \"16\": {\n        name: \"(anonymous_16)\",\n        decl: {\n          start: {\n            line: 210,\n            column: 13\n          },\n          end: {\n            line: 210,\n            column: 14\n          }\n        },\n        loc: {\n          start: {\n            line: 210,\n            column: 22\n          },\n          end: {\n            line: 212,\n            column: 7\n          }\n        },\n        line: 210\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 53,\n            column: 11\n          },\n          end: {\n            line: 53,\n            column: 68\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 53,\n            column: 11\n          },\n          end: {\n            line: 53,\n            column: 40\n          }\n        }, {\n          start: {\n            line: 53,\n            column: 44\n          },\n          end: {\n            line: 53,\n            column: 68\n          }\n        }],\n        line: 53\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 56,\n            column: 21\n          },\n          end: {\n            line: 56,\n            column: 86\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 56,\n            column: 51\n          },\n          end: {\n            line: 56,\n            column: 64\n          }\n        }, {\n          start: {\n            line: 56,\n            column: 67\n          },\n          end: {\n            line: 56,\n            column: 86\n          }\n        }],\n        line: 56\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 70,\n            column: 6\n          },\n          end: {\n            line: 72,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 70,\n            column: 6\n          },\n          end: {\n            line: 72,\n            column: 7\n          }\n        }, {\n          start: {\n            line: undefined,\n            column: undefined\n          },\n          end: {\n            line: undefined,\n            column: undefined\n          }\n        }],\n        line: 70\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 147,\n            column: 6\n          },\n          end: {\n            line: 154,\n            column: 7\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 147,\n            column: 6\n          },\n          end: {\n            line: 154,\n            column: 7\n          }\n        }, {\n          start: {\n            line: undefined,\n            column: undefined\n          },\n          end: {\n            line: undefined,\n            column: undefined\n          }\n        }],\n        line: 147\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 148,\n            column: 8\n          },\n          end: {\n            line: 153,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 148,\n            column: 8\n          },\n          end: {\n            line: 153,\n            column: 9\n          }\n        }, {\n          start: {\n            line: undefined,\n            column: undefined\n          },\n          end: {\n            line: undefined,\n            column: undefined\n          }\n        }],\n        line: 148\n      },\n      \"5\": {\n        loc: {\n          start: {\n            line: 149,\n            column: 10\n          },\n          end: {\n            line: 151,\n            column: 11\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 149,\n            column: 10\n          },\n          end: {\n            line: 151,\n            column: 11\n          }\n        }, {\n          start: {\n            line: undefined,\n            column: undefined\n          },\n          end: {\n            line: undefined,\n            column: undefined\n          }\n        }],\n        line: 149\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0,\n      \"21\": 0,\n      \"22\": 0,\n      \"23\": 0,\n      \"24\": 0,\n      \"25\": 0,\n      \"26\": 0,\n      \"27\": 0,\n      \"28\": 0,\n      \"29\": 0,\n      \"30\": 0,\n      \"31\": 0,\n      \"32\": 0,\n      \"33\": 0,\n      \"34\": 0,\n      \"35\": 0,\n      \"36\": 0,\n      \"37\": 0,\n      \"38\": 0,\n      \"39\": 0,\n      \"40\": 0,\n      \"41\": 0,\n      \"42\": 0,\n      \"43\": 0,\n      \"44\": 0,\n      \"45\": 0,\n      \"46\": 0,\n      \"47\": 0,\n      \"48\": 0,\n      \"49\": 0,\n      \"50\": 0,\n      \"51\": 0,\n      \"52\": 0,\n      \"53\": 0,\n      \"54\": 0,\n      \"55\": 0,\n      \"56\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0],\n      \"4\": [0, 0],\n      \"5\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"b8b9cce371e8d78c3f81f2973b719a646188b966\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_1lxj7po26n = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_1lxj7po26n();\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.string.ends-with.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.error.cause.js\";\n\n/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport axios from 'axios';\nimport qs from 'qs';\nimport ServerStatus from '@/model/server.status';\nimport { BUS } from '@/events';\nvar DATASET_SIZE_QUERY_1 = (cov_1lxj7po26n().s[0]++, 'select (count(*) as ?count) {?s ?p ?o}');\nvar DATASET_SIZE_QUERY_2 = (cov_1lxj7po26n().s[1]++, 'select ?g (count(*) as ?count) {graph ?g {?s ?p ?o}} group by ?g');\nvar DATASET_COUNT_GRAPH_QUERY_1 = (cov_1lxj7po26n().s[2]++, 'select (count(*) as ?count) {?s ?p ?o}');\nvar DATASET_COUNT_GRAPH_QUERY_2 = (cov_1lxj7po26n().s[3]++, 'select ?g (count(*) as ?count) {graph ?g {?s ?p ?o}} group by ?g');\n\nvar FusekiService = /*#__PURE__*/function () {\n  /**\n   * @param {Location} location\n   */\n  function FusekiService(location) {\n    _classCallCheck(this, FusekiService);\n\n    cov_1lxj7po26n().f[0]++;\n    cov_1lxj7po26n().s[4]++;\n    this.isOffline = true;\n    cov_1lxj7po26n().s[5]++;\n    this.pathname = location.pathname;\n  }\n  /**\n   * Gets the Fuseki URL, only the pathname onward. The protocol, server, port, etc,\n   * are left to the browser/JS engine & Vue to choose. Previously we were passing\n   * strings such as `/#/ping$`. But this did not work when the application was\n   * deployed on a Tomcat server, for example, where the base URL could be something\n   * like `http://localhost:8080/jena-fuseki/#/`.\n   *\n   * See RC1 vote thread for 4.4.0 for more: https://lists.apache.org/thread/z3gb5w95oc7c4v0g1jpk9jkxm0l4b7lh\n   *\n   * @param {string} url - Vue route URL\n   * @return {string} a new route URL that includes any pathname in the URL\n   */\n\n\n  _createClass(FusekiService, [{\n    key: \"getFusekiUrl\",\n    value: function getFusekiUrl(url) {\n      cov_1lxj7po26n().f[1]++;\n      // remove leading `/`'s\n      var normalizedUrl = (cov_1lxj7po26n().s[6]++, url);\n      cov_1lxj7po26n().s[7]++;\n\n      while ((cov_1lxj7po26n().b[0][0]++, normalizedUrl.startsWith('/')) && (cov_1lxj7po26n().b[0][1]++, normalizedUrl.length > 0)) {\n        cov_1lxj7po26n().s[8]++;\n        normalizedUrl = normalizedUrl.slice(1);\n      }\n\n      var pathname = (cov_1lxj7po26n().s[9]++, this.pathname.endsWith('/') ? (cov_1lxj7po26n().b[1][0]++, this.pathname) : (cov_1lxj7po26n().b[1][1]++, \"\".concat(this.pathname, \"/\")));\n      cov_1lxj7po26n().s[10]++;\n      return \"\".concat(pathname).concat(normalizedUrl);\n    }\n  }, {\n    key: \"getServerData\",\n    value: function () {\n      var _getServerData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                cov_1lxj7po26n().f[2]++;\n                cov_1lxj7po26n().s[11]++;\n                _context.next = 4;\n                return axios.get(this.getFusekiUrl('/$/server'));\n\n              case 4:\n                response = _context.sent;\n                cov_1lxj7po26n().s[12]++;\n                return _context.abrupt(\"return\", response.data);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getServerData() {\n        return _getServerData.apply(this, arguments);\n      }\n\n      return getServerData;\n    }()\n  }, {\n    key: \"getServerStatus\",\n    value: function () {\n      var _getServerStatus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var startTime;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                cov_1lxj7po26n().f[3]++;\n                startTime = (cov_1lxj7po26n().s[13]++, new Date().getTime());\n                cov_1lxj7po26n().s[14]++;\n                _context2.prev = 3;\n                cov_1lxj7po26n().s[15]++;\n                _context2.next = 7;\n                return axios.get(this.getFusekiUrl('/$/ping'));\n\n              case 7:\n                cov_1lxj7po26n().s[16]++;\n\n                // connection reset?\n                if (this.isOffline) {\n                  cov_1lxj7po26n().b[2][0]++;\n                  cov_1lxj7po26n().s[17]++;\n                  BUS.$emit('connection:reset');\n                } else {\n                  cov_1lxj7po26n().b[2][1]++;\n                }\n\n                cov_1lxj7po26n().s[18]++;\n                this.isOffline = false;\n                cov_1lxj7po26n().s[19]++;\n                return _context2.abrupt(\"return\", new ServerStatus(true, \"Last ping returned OK in \".concat(this._duration(startTime), \"ms\")));\n\n              case 15:\n                _context2.prev = 15;\n                _context2.t0 = _context2[\"catch\"](3);\n                cov_1lxj7po26n().s[20]++;\n                this.isOffline = true;\n                cov_1lxj7po26n().s[21]++;\n                return _context2.abrupt(\"return\", new ServerStatus(false, \"Last ping returned \\\"\".concat(_context2.t0, \"\\\" in \").concat(this._duration(startTime), \"ms\")));\n\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[3, 15]]);\n      }));\n\n      function getServerStatus() {\n        return _getServerStatus.apply(this, arguments);\n      }\n\n      return getServerStatus;\n    }()\n  }, {\n    key: \"_duration\",\n    value: function _duration(startTime) {\n      cov_1lxj7po26n().f[4]++;\n      cov_1lxj7po26n().s[22]++;\n      return new Date().getTime() - startTime;\n    }\n  }, {\n    key: \"getDatasetStats\",\n    value: function () {\n      var _getDatasetStats = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(datasetName) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                cov_1lxj7po26n().f[5]++;\n                cov_1lxj7po26n().s[23]++;\n                _context3.next = 4;\n                return axios.get(this.getFusekiUrl(\"/$/stats/\".concat(datasetName)));\n\n              case 4:\n                response = _context3.sent;\n                cov_1lxj7po26n().s[24]++;\n                return _context3.abrupt(\"return\", response.data);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getDatasetStats(_x) {\n        return _getDatasetStats.apply(this, arguments);\n      }\n\n      return getDatasetStats;\n    }()\n  }, {\n    key: \"getDatasetSize\",\n    value: function () {\n      var _getDatasetSize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(datasetName, endpoint) {\n        var promisesResult, results, defaultGraphResult, allGraphResult;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                cov_1lxj7po26n().f[6]++;\n                cov_1lxj7po26n().s[25]++;\n                _context4.next = 4;\n                return Promise.all([axios.get(this.getFusekiUrl(\"/\".concat(datasetName, \"/\").concat(endpoint)), {\n                  params: {\n                    query: DATASET_SIZE_QUERY_1\n                  }\n                }), axios.get(this.getFusekiUrl(\"/\".concat(datasetName, \"/\").concat(endpoint)), {\n                  params: {\n                    query: DATASET_SIZE_QUERY_2\n                  }\n                })]);\n\n              case 4:\n                promisesResult = _context4.sent;\n                results = (cov_1lxj7po26n().s[26]++, {});\n                defaultGraphResult = (cov_1lxj7po26n().s[27]++, promisesResult[0]);\n                cov_1lxj7po26n().s[28]++;\n                results['default graph'] = defaultGraphResult.data.results.bindings[0].count.value;\n                allGraphResult = (cov_1lxj7po26n().s[29]++, promisesResult[1]);\n                cov_1lxj7po26n().s[30]++;\n                allGraphResult.data.results.bindings.forEach(function (binding) {\n                  cov_1lxj7po26n().f[7]++;\n                  cov_1lxj7po26n().s[31]++;\n                  results[binding.g.value] = binding.count.value;\n                });\n                cov_1lxj7po26n().s[32]++;\n                return _context4.abrupt(\"return\", results);\n\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getDatasetSize(_x2, _x3) {\n        return _getDatasetSize.apply(this, arguments);\n      }\n\n      return getDatasetSize;\n    }()\n  }, {\n    key: \"deleteDataset\",\n    value: function () {\n      var _deleteDataset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(datasetName) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                cov_1lxj7po26n().f[8]++;\n                cov_1lxj7po26n().s[33]++;\n                _context5.next = 4;\n                return axios.delete(this.getFusekiUrl(\"/$/datasets\".concat(datasetName)));\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function deleteDataset(_x4) {\n        return _deleteDataset.apply(this, arguments);\n      }\n\n      return deleteDataset;\n    }()\n    /**\n     * @param datasetName\n     * @returns {Promise<{\n     *   data: {\n     *     taskId: string,\n     *     requestId: number\n     *   }\n     * }>}\n     */\n\n  }, {\n    key: \"backupDataset\",\n    value: function () {\n      var _backupDataset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(datasetName) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                cov_1lxj7po26n().f[9]++;\n                cov_1lxj7po26n().s[34]++;\n                _context6.next = 4;\n                return axios.post(this.getFusekiUrl(\"/$/backup\".concat(datasetName)));\n\n              case 4:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function backupDataset(_x5) {\n        return _backupDataset.apply(this, arguments);\n      }\n\n      return backupDataset;\n    }()\n  }, {\n    key: \"createDataset\",\n    value: function () {\n      var _createDataset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(datasetName, datasetType) {\n        var data, headers;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                cov_1lxj7po26n().f[10]++;\n                data = (cov_1lxj7po26n().s[35]++, qs.stringify({\n                  dbName: datasetName,\n                  dbType: datasetType\n                })); // const data = new FormData()\n                // data.set('dbName', datasetName)\n                // data.set('dbType', datasetType)\n\n                headers = (cov_1lxj7po26n().s[36]++, {\n                  'Content-Type': 'application/x-www-form-urlencoded'\n                });\n                cov_1lxj7po26n().s[37]++;\n                _context7.prev = 4;\n                cov_1lxj7po26n().s[38]++;\n                _context7.next = 8;\n                return axios.post(this.getFusekiUrl('/$/datasets'), data, {\n                  headers: headers\n                });\n\n              case 8:\n                _context7.next = 36;\n                break;\n\n              case 10:\n                _context7.prev = 10;\n                _context7.t0 = _context7[\"catch\"](4);\n                cov_1lxj7po26n().s[39]++;\n\n                if (!_context7.t0.response) {\n                  _context7.next = 33;\n                  break;\n                }\n\n                cov_1lxj7po26n().b[3][0]++;\n                cov_1lxj7po26n().s[40]++;\n\n                if (!(_context7.t0.response.status !== 200)) {\n                  _context7.next = 30;\n                  break;\n                }\n\n                cov_1lxj7po26n().b[4][0]++;\n                cov_1lxj7po26n().s[41]++;\n\n                if (!(_context7.t0.response.status === 409)) {\n                  _context7.next = 25;\n                  break;\n                }\n\n                cov_1lxj7po26n().b[5][0]++;\n                cov_1lxj7po26n().s[42]++;\n                throw new Error(\"failed to create dataset \\\"\".concat(datasetName, \"\\\", reason: there is another dataset with the same name\"));\n\n              case 25:\n                cov_1lxj7po26n().b[5][1]++;\n\n              case 26:\n                cov_1lxj7po26n().s[43]++;\n                throw new Error(\"failed to create dataset \\\"\".concat(datasetName, \"\\\" with type \").concat(datasetType, \", reason: HTTP status: \\\"\").concat(_context7.t0.response.status, \"\\\", message: \").concat(_context7.t0.response.statusText));\n\n              case 30:\n                cov_1lxj7po26n().b[4][1]++;\n\n              case 31:\n                _context7.next = 34;\n                break;\n\n              case 33:\n                cov_1lxj7po26n().b[3][1]++;\n\n              case 34:\n                cov_1lxj7po26n().s[44]++;\n                throw _context7.t0;\n\n              case 36:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[4, 10]]);\n      }));\n\n      function createDataset(_x6, _x7) {\n        return _createDataset.apply(this, arguments);\n      }\n\n      return createDataset;\n    }()\n  }, {\n    key: \"getTasks\",\n    value: function () {\n      var _getTasks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                cov_1lxj7po26n().f[11]++;\n                cov_1lxj7po26n().s[45]++;\n                return _context8.abrupt(\"return\", axios.get(this.getFusekiUrl('/$/tasks')));\n\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getTasks() {\n        return _getTasks.apply(this, arguments);\n      }\n\n      return getTasks;\n    }()\n  }, {\n    key: \"countGraphsTriples\",\n    value: function () {\n      var _countGraphsTriples = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(datasetName, endpoint) {\n        var promisesResult, results, defaultGraphResult, allGraphResult;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                cov_1lxj7po26n().f[12]++;\n                cov_1lxj7po26n().s[46]++;\n                _context9.next = 4;\n                return Promise.all([axios.get(this.getFusekiUrl(\"/\".concat(datasetName, \"/\").concat(endpoint)), {\n                  params: {\n                    query: DATASET_COUNT_GRAPH_QUERY_1\n                  }\n                }), axios.get(this.getFusekiUrl(\"/\".concat(datasetName, \"/\").concat(endpoint)), {\n                  params: {\n                    query: DATASET_COUNT_GRAPH_QUERY_2\n                  }\n                })]);\n\n              case 4:\n                promisesResult = _context9.sent;\n                results = (cov_1lxj7po26n().s[47]++, {});\n                defaultGraphResult = (cov_1lxj7po26n().s[48]++, promisesResult[0]);\n                cov_1lxj7po26n().s[49]++;\n                results.default = defaultGraphResult.data.results.bindings[0].count.value;\n                allGraphResult = (cov_1lxj7po26n().s[50]++, promisesResult[1]);\n                cov_1lxj7po26n().s[51]++;\n                allGraphResult.data.results.bindings.forEach(function (binding) {\n                  cov_1lxj7po26n().f[13]++;\n                  cov_1lxj7po26n().s[52]++;\n                  results[binding.g.value] = binding.count.value;\n                });\n                cov_1lxj7po26n().s[53]++;\n                return _context9.abrupt(\"return\", results);\n\n              case 14:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function countGraphsTriples(_x8, _x9) {\n        return _countGraphsTriples.apply(this, arguments);\n      }\n\n      return countGraphsTriples;\n    }()\n  }, {\n    key: \"fetchGraph\",\n    value: function () {\n      var _fetchGraph = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(datasetName, graphName) {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                cov_1lxj7po26n().f[14]++;\n                cov_1lxj7po26n().s[54]++;\n                _context10.next = 4;\n                return axios.get(this.getFusekiUrl(\"/\".concat(datasetName)), {\n                  params: {\n                    graph: graphName\n                  },\n                  headers: {\n                    Accept: 'text/turtle; charset=utf-8'\n                  }\n                });\n\n              case 4:\n                return _context10.abrupt(\"return\", _context10.sent);\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function fetchGraph(_x10, _x11) {\n        return _fetchGraph.apply(this, arguments);\n      }\n\n      return fetchGraph;\n    }()\n  }, {\n    key: \"saveGraph\",\n    value: function () {\n      var _saveGraph = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(datasetName, graphName, code) {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                cov_1lxj7po26n().f[15]++;\n                cov_1lxj7po26n().s[55]++;\n                _context11.next = 4;\n                return axios.put(this.getFusekiUrl(\"/\".concat(datasetName)), code, {\n                  params: {\n                    graph: graphName\n                  },\n                  headers: {\n                    Accept: 'application/json, text/javascript, */*; q=0.01',\n                    'Content-Type': 'text/turtle; charset=UTF-8'\n                  }\n                }).catch(function (error) {\n                  cov_1lxj7po26n().f[16]++;\n                  cov_1lxj7po26n().s[56]++;\n                  throw new Error(error.response.data);\n                });\n\n              case 4:\n                return _context11.abrupt(\"return\", _context11.sent);\n\n              case 5:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function saveGraph(_x12, _x13, _x14) {\n        return _saveGraph.apply(this, arguments);\n      }\n\n      return saveGraph;\n    }()\n  }]);\n\n  return FusekiService;\n}();\n\nexport default FusekiService;","map":{"version":3,"sources":["C:/progs/vaimee/sjenar/jena-fuseki2/jena-fuseki-ui/src/services/fuseki.service.js"],"names":["axios","qs","ServerStatus","BUS","DATASET_SIZE_QUERY_1","DATASET_SIZE_QUERY_2","DATASET_COUNT_GRAPH_QUERY_1","DATASET_COUNT_GRAPH_QUERY_2","FusekiService","location","isOffline","pathname","url","normalizedUrl","startsWith","length","slice","endsWith","get","getFusekiUrl","response","data","startTime","Date","getTime","$emit","_duration","datasetName","endpoint","Promise","all","params","query","promisesResult","results","defaultGraphResult","bindings","count","value","allGraphResult","forEach","binding","g","delete","post","datasetType","stringify","dbName","dbType","headers","status","Error","statusText","default","graphName","graph","Accept","code","put","catch","error"],"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport axios from 'axios'\nimport qs from 'qs'\nimport ServerStatus from '@/model/server.status'\nimport { BUS } from '@/events'\n\nconst DATASET_SIZE_QUERY_1 = 'select (count(*) as ?count) {?s ?p ?o}'\nconst DATASET_SIZE_QUERY_2 = 'select ?g (count(*) as ?count) {graph ?g {?s ?p ?o}} group by ?g'\n\nconst DATASET_COUNT_GRAPH_QUERY_1 = 'select (count(*) as ?count) {?s ?p ?o}'\nconst DATASET_COUNT_GRAPH_QUERY_2 = 'select ?g (count(*) as ?count) {graph ?g {?s ?p ?o}} group by ?g'\n\nclass FusekiService {\n  /**\n   * @param {Location} location\n   */\n  constructor (location) {\n    this.isOffline = true\n    this.pathname = location.pathname\n  }\n\n  /**\n   * Gets the Fuseki URL, only the pathname onward. The protocol, server, port, etc,\n   * are left to the browser/JS engine & Vue to choose. Previously we were passing\n   * strings such as `/#/ping$`. But this did not work when the application was\n   * deployed on a Tomcat server, for example, where the base URL could be something\n   * like `http://localhost:8080/jena-fuseki/#/`.\n   *\n   * See RC1 vote thread for 4.4.0 for more: https://lists.apache.org/thread/z3gb5w95oc7c4v0g1jpk9jkxm0l4b7lh\n   *\n   * @param {string} url - Vue route URL\n   * @return {string} a new route URL that includes any pathname in the URL\n   */\n  getFusekiUrl (url) {\n    // remove leading `/`'s\n    let normalizedUrl = url\n    while (normalizedUrl.startsWith('/') && normalizedUrl.length > 0) {\n      normalizedUrl = normalizedUrl.slice(1)\n    }\n    const pathname = this.pathname.endsWith('/') ? this.pathname : `${this.pathname}/`\n    return `${pathname}${normalizedUrl}`\n  }\n\n  async getServerData () {\n    const response = await axios.get(this.getFusekiUrl('/$/server'))\n    return response.data\n  }\n\n  async getServerStatus () {\n    const startTime = new Date().getTime()\n    try {\n      await axios.get(this.getFusekiUrl('/$/ping'))\n      // connection reset?\n      if (this.isOffline) {\n        BUS.$emit('connection:reset')\n      }\n      this.isOffline = false\n      return new ServerStatus(true, `Last ping returned OK in ${this._duration(startTime)}ms`)\n    } catch (error) {\n      this.isOffline = true\n      return new ServerStatus(false, `Last ping returned \"${error}\" in ${this._duration(startTime)}ms`)\n    }\n  }\n\n  _duration (startTime) {\n    return new Date().getTime() - startTime\n  }\n\n  async getDatasetStats (datasetName) {\n    const response = await axios.get(this.getFusekiUrl(`/$/stats/${datasetName}`))\n    return response.data\n  }\n\n  async getDatasetSize (datasetName, endpoint) {\n    const promisesResult = await Promise.all([\n      axios\n        .get(this.getFusekiUrl(`/${datasetName}/${endpoint}`), {\n          params: {\n            query: DATASET_SIZE_QUERY_1\n          }\n        }),\n      axios.get(this.getFusekiUrl(`/${datasetName}/${endpoint}`), {\n        params: {\n          query: DATASET_SIZE_QUERY_2\n        }\n      })\n    ])\n    const results = {}\n    const defaultGraphResult = promisesResult[0]\n    results['default graph'] = defaultGraphResult.data.results.bindings[0].count.value\n    const allGraphResult = promisesResult[1]\n    allGraphResult.data.results.bindings.forEach(binding => {\n      results[binding.g.value] = binding.count.value\n    })\n    return results\n  }\n\n  async deleteDataset (datasetName) {\n    await axios.delete(this.getFusekiUrl(`/$/datasets${datasetName}`))\n  }\n\n  /**\n   * @param datasetName\n   * @returns {Promise<{\n   *   data: {\n   *     taskId: string,\n   *     requestId: number\n   *   }\n   * }>}\n   */\n  async backupDataset (datasetName) {\n    return await axios.post(this.getFusekiUrl(`/$/backup${datasetName}`))\n  }\n\n  async createDataset (datasetName, datasetType) {\n    const data = qs.stringify({\n      dbName: datasetName,\n      dbType: datasetType\n    })\n    // const data = new FormData()\n    // data.set('dbName', datasetName)\n    // data.set('dbType', datasetType)\n    const headers = {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n    try {\n      await axios.post(this.getFusekiUrl('/$/datasets'), data, {\n        headers\n      })\n    } catch (error) {\n      if (error.response) {\n        if (error.response.status !== 200) {\n          if (error.response.status === 409) {\n            throw new Error(`failed to create dataset \"${datasetName}\", reason: there is another dataset with the same name`)\n          }\n          throw new Error(`failed to create dataset \"${datasetName}\" with type ${datasetType}, reason: HTTP status: \"${error.response.status}\", message: ${error.response.statusText}`)\n        }\n      }\n      throw error\n    }\n  }\n\n  async getTasks () {\n    return axios.get(this.getFusekiUrl('/$/tasks'))\n  }\n\n  async countGraphsTriples (datasetName, endpoint) {\n    const promisesResult = await Promise.all([\n      axios\n        .get(this.getFusekiUrl(`/${datasetName}/${endpoint}`), {\n          params: {\n            query: DATASET_COUNT_GRAPH_QUERY_1\n          }\n        }),\n      axios.get(this.getFusekiUrl(`/${datasetName}/${endpoint}`), {\n        params: {\n          query: DATASET_COUNT_GRAPH_QUERY_2\n        }\n      })\n    ])\n    const results = {}\n    const defaultGraphResult = promisesResult[0]\n    results.default = defaultGraphResult.data.results.bindings[0].count.value\n    const allGraphResult = promisesResult[1]\n    allGraphResult.data.results.bindings.forEach(binding => {\n      results[binding.g.value] = binding.count.value\n    })\n    return results\n  }\n\n  async fetchGraph (datasetName, graphName) {\n    return await axios\n      .get(this.getFusekiUrl(`/${datasetName}`), {\n        params: {\n          graph: graphName\n        },\n        headers: {\n          Accept: 'text/turtle; charset=utf-8'\n        }\n      })\n  }\n\n  async saveGraph (datasetName, graphName, code) {\n    return await axios\n      .put(this.getFusekiUrl(`/${datasetName}`), code, {\n        params: {\n          graph: graphName\n        },\n        headers: {\n          Accept: 'application/json, text/javascript, */*; q=0.01',\n          'Content-Type': 'text/turtle; charset=UTF-8'\n        }\n      })\n      .catch(error => {\n        throw new Error(error.response.data)\n      })\n  }\n}\n\nexport default FusekiService\n"]},"metadata":{},"sourceType":"module"}